//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Kesco.Lib.Win.Data.Business.V2.Docs {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DSDocs")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DSDocs : global::System.Data.DataSet {
        
        private ТипыДокументовDataTable tableТипыДокументов;
        
        private ПоляДокументовDataTable tableПоляДокументов;
        
        private ТипыПолейDataTable tableТипыПолей;
        
        private ДокументыDataTable tableДокументы;
        
        private ДокументыДанныеDataTable tableДокументыДанные;
        
        private СвязиДокументовDataTable tableСвязиДокументов;
        
        private ЛицаДокументовDataTable tableЛицаДокументов;
        
        private ПодписиДокументовDataTable tableПодписиДокументов;
        
        private global::System.Data.DataRelation relationДокументыДокументыДанные;
        
        private global::System.Data.DataRelation relationДокументыСвязиДокументов;
        
        private global::System.Data.DataRelation relationДокументыЛицаДокументов;
        
        private global::System.Data.DataRelation relationДокументыПодписиДокументов;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DSDocs() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DSDocs(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ТипыДокументов"] != null)) {
                    base.Tables.Add(new ТипыДокументовDataTable(ds.Tables["ТипыДокументов"]));
                }
                if ((ds.Tables["ПоляДокументов"] != null)) {
                    base.Tables.Add(new ПоляДокументовDataTable(ds.Tables["ПоляДокументов"]));
                }
                if ((ds.Tables["ТипыПолей"] != null)) {
                    base.Tables.Add(new ТипыПолейDataTable(ds.Tables["ТипыПолей"]));
                }
                if ((ds.Tables["Документы"] != null)) {
                    base.Tables.Add(new ДокументыDataTable(ds.Tables["Документы"]));
                }
                if ((ds.Tables["ДокументыДанные"] != null)) {
                    base.Tables.Add(new ДокументыДанныеDataTable(ds.Tables["ДокументыДанные"]));
                }
                if ((ds.Tables["СвязиДокументов"] != null)) {
                    base.Tables.Add(new СвязиДокументовDataTable(ds.Tables["СвязиДокументов"]));
                }
                if ((ds.Tables["ЛицаДокументов"] != null)) {
                    base.Tables.Add(new ЛицаДокументовDataTable(ds.Tables["ЛицаДокументов"]));
                }
                if ((ds.Tables["ПодписиДокументов"] != null)) {
                    base.Tables.Add(new ПодписиДокументовDataTable(ds.Tables["ПодписиДокументов"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ТипыДокументовDataTable ТипыДокументов {
            get {
                return this.tableТипыДокументов;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ПоляДокументовDataTable ПоляДокументов {
            get {
                return this.tableПоляДокументов;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ТипыПолейDataTable ТипыПолей {
            get {
                return this.tableТипыПолей;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ДокументыDataTable Документы {
            get {
                return this.tableДокументы;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ДокументыДанныеDataTable ДокументыДанные {
            get {
                return this.tableДокументыДанные;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public СвязиДокументовDataTable СвязиДокументов {
            get {
                return this.tableСвязиДокументов;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ЛицаДокументовDataTable ЛицаДокументов {
            get {
                return this.tableЛицаДокументов;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ПодписиДокументовDataTable ПодписиДокументов {
            get {
                return this.tableПодписиДокументов;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DSDocs cln = ((DSDocs)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ТипыДокументов"] != null)) {
                    base.Tables.Add(new ТипыДокументовDataTable(ds.Tables["ТипыДокументов"]));
                }
                if ((ds.Tables["ПоляДокументов"] != null)) {
                    base.Tables.Add(new ПоляДокументовDataTable(ds.Tables["ПоляДокументов"]));
                }
                if ((ds.Tables["ТипыПолей"] != null)) {
                    base.Tables.Add(new ТипыПолейDataTable(ds.Tables["ТипыПолей"]));
                }
                if ((ds.Tables["Документы"] != null)) {
                    base.Tables.Add(new ДокументыDataTable(ds.Tables["Документы"]));
                }
                if ((ds.Tables["ДокументыДанные"] != null)) {
                    base.Tables.Add(new ДокументыДанныеDataTable(ds.Tables["ДокументыДанные"]));
                }
                if ((ds.Tables["СвязиДокументов"] != null)) {
                    base.Tables.Add(new СвязиДокументовDataTable(ds.Tables["СвязиДокументов"]));
                }
                if ((ds.Tables["ЛицаДокументов"] != null)) {
                    base.Tables.Add(new ЛицаДокументовDataTable(ds.Tables["ЛицаДокументов"]));
                }
                if ((ds.Tables["ПодписиДокументов"] != null)) {
                    base.Tables.Add(new ПодписиДокументовDataTable(ds.Tables["ПодписиДокументов"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableТипыДокументов = ((ТипыДокументовDataTable)(base.Tables["ТипыДокументов"]));
            if ((initTable == true)) {
                if ((this.tableТипыДокументов != null)) {
                    this.tableТипыДокументов.InitVars();
                }
            }
            this.tableПоляДокументов = ((ПоляДокументовDataTable)(base.Tables["ПоляДокументов"]));
            if ((initTable == true)) {
                if ((this.tableПоляДокументов != null)) {
                    this.tableПоляДокументов.InitVars();
                }
            }
            this.tableТипыПолей = ((ТипыПолейDataTable)(base.Tables["ТипыПолей"]));
            if ((initTable == true)) {
                if ((this.tableТипыПолей != null)) {
                    this.tableТипыПолей.InitVars();
                }
            }
            this.tableДокументы = ((ДокументыDataTable)(base.Tables["Документы"]));
            if ((initTable == true)) {
                if ((this.tableДокументы != null)) {
                    this.tableДокументы.InitVars();
                }
            }
            this.tableДокументыДанные = ((ДокументыДанныеDataTable)(base.Tables["ДокументыДанные"]));
            if ((initTable == true)) {
                if ((this.tableДокументыДанные != null)) {
                    this.tableДокументыДанные.InitVars();
                }
            }
            this.tableСвязиДокументов = ((СвязиДокументовDataTable)(base.Tables["СвязиДокументов"]));
            if ((initTable == true)) {
                if ((this.tableСвязиДокументов != null)) {
                    this.tableСвязиДокументов.InitVars();
                }
            }
            this.tableЛицаДокументов = ((ЛицаДокументовDataTable)(base.Tables["ЛицаДокументов"]));
            if ((initTable == true)) {
                if ((this.tableЛицаДокументов != null)) {
                    this.tableЛицаДокументов.InitVars();
                }
            }
            this.tableПодписиДокументов = ((ПодписиДокументовDataTable)(base.Tables["ПодписиДокументов"]));
            if ((initTable == true)) {
                if ((this.tableПодписиДокументов != null)) {
                    this.tableПодписиДокументов.InitVars();
                }
            }
            this.relationДокументыДокументыДанные = this.Relations["ДокументыДокументыДанные"];
            this.relationДокументыСвязиДокументов = this.Relations["ДокументыСвязиДокументов"];
            this.relationДокументыЛицаДокументов = this.Relations["ДокументыЛицаДокументов"];
            this.relationДокументыПодписиДокументов = this.Relations["ДокументыПодписиДокументов"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DSDocs";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DSDocs.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableТипыДокументов = new ТипыДокументовDataTable();
            base.Tables.Add(this.tableТипыДокументов);
            this.tableПоляДокументов = new ПоляДокументовDataTable();
            base.Tables.Add(this.tableПоляДокументов);
            this.tableТипыПолей = new ТипыПолейDataTable();
            base.Tables.Add(this.tableТипыПолей);
            this.tableДокументы = new ДокументыDataTable();
            base.Tables.Add(this.tableДокументы);
            this.tableДокументыДанные = new ДокументыДанныеDataTable();
            base.Tables.Add(this.tableДокументыДанные);
            this.tableСвязиДокументов = new СвязиДокументовDataTable();
            base.Tables.Add(this.tableСвязиДокументов);
            this.tableЛицаДокументов = new ЛицаДокументовDataTable();
            base.Tables.Add(this.tableЛицаДокументов);
            this.tableПодписиДокументов = new ПодписиДокументовDataTable();
            base.Tables.Add(this.tableПодписиДокументов);
            global::System.Data.ForeignKeyConstraint fkc;
            fkc = new global::System.Data.ForeignKeyConstraint("ДокументыДокументыДанные", new global::System.Data.DataColumn[] {
                        this.tableДокументы.КодДокументаColumn}, new global::System.Data.DataColumn[] {
                        this.tableДокументыДанные.КодДокументаColumn});
            this.tableДокументыДанные.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("ДокументыСвязиДокументов", new global::System.Data.DataColumn[] {
                        this.tableДокументы.КодДокументаColumn}, new global::System.Data.DataColumn[] {
                        this.tableСвязиДокументов.КодДокументаВытекающегоColumn});
            this.tableСвязиДокументов.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("ДокументыЛицаДокументов", new global::System.Data.DataColumn[] {
                        this.tableДокументы.КодДокументаColumn}, new global::System.Data.DataColumn[] {
                        this.tableЛицаДокументов.КодДокументаColumn});
            this.tableЛицаДокументов.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            fkc = new global::System.Data.ForeignKeyConstraint("ДокументыПодписиДокументов", new global::System.Data.DataColumn[] {
                        this.tableДокументы.КодДокументаColumn}, new global::System.Data.DataColumn[] {
                        this.tableПодписиДокументов.КодДокументаColumn});
            this.tableПодписиДокументов.Constraints.Add(fkc);
            fkc.AcceptRejectRule = global::System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = global::System.Data.Rule.Cascade;
            fkc.UpdateRule = global::System.Data.Rule.Cascade;
            this.relationДокументыДокументыДанные = new global::System.Data.DataRelation("ДокументыДокументыДанные", new global::System.Data.DataColumn[] {
                        this.tableДокументы.КодДокументаColumn}, new global::System.Data.DataColumn[] {
                        this.tableДокументыДанные.КодДокументаColumn}, false);
            this.Relations.Add(this.relationДокументыДокументыДанные);
            this.relationДокументыСвязиДокументов = new global::System.Data.DataRelation("ДокументыСвязиДокументов", new global::System.Data.DataColumn[] {
                        this.tableДокументы.КодДокументаColumn}, new global::System.Data.DataColumn[] {
                        this.tableСвязиДокументов.КодДокументаВытекающегоColumn}, false);
            this.Relations.Add(this.relationДокументыСвязиДокументов);
            this.relationДокументыЛицаДокументов = new global::System.Data.DataRelation("ДокументыЛицаДокументов", new global::System.Data.DataColumn[] {
                        this.tableДокументы.КодДокументаColumn}, new global::System.Data.DataColumn[] {
                        this.tableЛицаДокументов.КодДокументаColumn}, false);
            this.Relations.Add(this.relationДокументыЛицаДокументов);
            this.relationДокументыПодписиДокументов = new global::System.Data.DataRelation("ДокументыПодписиДокументов", new global::System.Data.DataColumn[] {
                        this.tableДокументы.КодДокументаColumn}, new global::System.Data.DataColumn[] {
                        this.tableПодписиДокументов.КодДокументаColumn}, false);
            this.Relations.Add(this.relationДокументыПодписиДокументов);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeТипыДокументов() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeПоляДокументов() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeТипыПолей() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeДокументы() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeДокументыДанные() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeСвязиДокументов() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeЛицаДокументов() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeПодписиДокументов() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DSDocs ds = new DSDocs();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ТипыДокументовRowChangeEventHandler(object sender, ТипыДокументовRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ПоляДокументовRowChangeEventHandler(object sender, ПоляДокументовRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ТипыПолейRowChangeEventHandler(object sender, ТипыПолейRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ДокументыRowChangeEventHandler(object sender, ДокументыRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ДокументыДанныеRowChangeEventHandler(object sender, ДокументыДанныеRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void СвязиДокументовRowChangeEventHandler(object sender, СвязиДокументовRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ЛицаДокументовRowChangeEventHandler(object sender, ЛицаДокументовRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ПодписиДокументовRowChangeEventHandler(object sender, ПодписиДокументовRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ТипыДокументовDataTable : global::System.Data.TypedTableBase<ТипыДокументовRow> {
            
            private global::System.Data.DataColumn columnКодТипаДокумента;
            
            private global::System.Data.DataColumn columnТипДокумента;
            
            private global::System.Data.DataColumn columnИмяПредставления;
            
            private global::System.Data.DataColumn columnНаличиеФормы;
            
            private global::System.Data.DataColumn columnURL;
            
            private global::System.Data.DataColumn columnSearchURL;
            
            private global::System.Data.DataColumn columnИсходящий;
            
            private global::System.Data.DataColumn columnТипАвтогенерацииНомера;
            
            private global::System.Data.DataColumn columnАлгоритмАвтогенерацииНомера;
            
            private global::System.Data.DataColumn columnChanged;
            
            private global::System.Data.DataColumn columnParent;
            
            private global::System.Data.DataColumn columnL;
            
            private global::System.Data.DataColumn columnR;
            
            private global::System.Data.DataColumn columnИзменил;
            
            private global::System.Data.DataColumn columnИзменено;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ТипыДокументовDataTable() {
                this.TableName = "ТипыДокументов";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ТипыДокументовDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ТипыДокументовDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодТипаДокументаColumn {
                get {
                    return this.columnКодТипаДокумента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ТипДокументаColumn {
                get {
                    return this.columnТипДокумента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ИмяПредставленияColumn {
                get {
                    return this.columnИмяПредставления;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn НаличиеФормыColumn {
                get {
                    return this.columnНаличиеФормы;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn URLColumn {
                get {
                    return this.columnURL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SearchURLColumn {
                get {
                    return this.columnSearchURL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ИсходящийColumn {
                get {
                    return this.columnИсходящий;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ТипАвтогенерацииНомераColumn {
                get {
                    return this.columnТипАвтогенерацииНомера;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn АлгоритмАвтогенерацииНомераColumn {
                get {
                    return this.columnАлгоритмАвтогенерацииНомера;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChangedColumn {
                get {
                    return this.columnChanged;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ParentColumn {
                get {
                    return this.columnParent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LColumn {
                get {
                    return this.columnL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RColumn {
                get {
                    return this.columnR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ИзменилColumn {
                get {
                    return this.columnИзменил;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ИзмененоColumn {
                get {
                    return this.columnИзменено;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ТипыДокументовRow this[int index] {
                get {
                    return ((ТипыДокументовRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ТипыДокументовRowChangeEventHandler ТипыДокументовRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ТипыДокументовRowChangeEventHandler ТипыДокументовRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ТипыДокументовRowChangeEventHandler ТипыДокументовRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ТипыДокументовRowChangeEventHandler ТипыДокументовRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddТипыДокументовRow(ТипыДокументовRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ТипыДокументовRow AddТипыДокументовRow(string ТипДокумента, string ИмяПредставления, byte НаличиеФормы, string URL, string SearchURL, bool Исходящий, int ТипАвтогенерацииНомера, int АлгоритмАвтогенерацииНомера, bool Changed, int Parent, int L, int R, int Изменил, System.DateTime Изменено) {
                ТипыДокументовRow rowТипыДокументовRow = ((ТипыДокументовRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ТипДокумента,
                        ИмяПредставления,
                        НаличиеФормы,
                        URL,
                        SearchURL,
                        Исходящий,
                        ТипАвтогенерацииНомера,
                        АлгоритмАвтогенерацииНомера,
                        Changed,
                        Parent,
                        L,
                        R,
                        Изменил,
                        Изменено};
                rowТипыДокументовRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowТипыДокументовRow);
                return rowТипыДокументовRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ТипыДокументовRow FindByКодТипаДокумента(int КодТипаДокумента) {
                return ((ТипыДокументовRow)(this.Rows.Find(new object[] {
                            КодТипаДокумента})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ТипыДокументовDataTable cln = ((ТипыДокументовDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ТипыДокументовDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnКодТипаДокумента = base.Columns["КодТипаДокумента"];
                this.columnТипДокумента = base.Columns["ТипДокумента"];
                this.columnИмяПредставления = base.Columns["ИмяПредставления"];
                this.columnНаличиеФормы = base.Columns["НаличиеФормы"];
                this.columnURL = base.Columns["URL"];
                this.columnSearchURL = base.Columns["SearchURL"];
                this.columnИсходящий = base.Columns["Исходящий"];
                this.columnТипАвтогенерацииНомера = base.Columns["ТипАвтогенерацииНомера"];
                this.columnАлгоритмАвтогенерацииНомера = base.Columns["АлгоритмАвтогенерацииНомера"];
                this.columnChanged = base.Columns["Changed"];
                this.columnParent = base.Columns["Parent"];
                this.columnL = base.Columns["L"];
                this.columnR = base.Columns["R"];
                this.columnИзменил = base.Columns["Изменил"];
                this.columnИзменено = base.Columns["Изменено"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnКодТипаДокумента = new global::System.Data.DataColumn("КодТипаДокумента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодТипаДокумента);
                this.columnТипДокумента = new global::System.Data.DataColumn("ТипДокумента", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТипДокумента);
                this.columnИмяПредставления = new global::System.Data.DataColumn("ИмяПредставления", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИмяПредставления);
                this.columnНаличиеФормы = new global::System.Data.DataColumn("НаличиеФормы", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНаличиеФормы);
                this.columnURL = new global::System.Data.DataColumn("URL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnURL);
                this.columnSearchURL = new global::System.Data.DataColumn("SearchURL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSearchURL);
                this.columnИсходящий = new global::System.Data.DataColumn("Исходящий", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИсходящий);
                this.columnТипАвтогенерацииНомера = new global::System.Data.DataColumn("ТипАвтогенерацииНомера", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТипАвтогенерацииНомера);
                this.columnАлгоритмАвтогенерацииНомера = new global::System.Data.DataColumn("АлгоритмАвтогенерацииНомера", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnАлгоритмАвтогенерацииНомера);
                this.columnChanged = new global::System.Data.DataColumn("Changed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChanged);
                this.columnParent = new global::System.Data.DataColumn("Parent", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParent);
                this.columnL = new global::System.Data.DataColumn("L", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL);
                this.columnR = new global::System.Data.DataColumn("R", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnR);
                this.columnИзменил = new global::System.Data.DataColumn("Изменил", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИзменил);
                this.columnИзменено = new global::System.Data.DataColumn("Изменено", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИзменено);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("DSDocsKey1", new global::System.Data.DataColumn[] {
                                this.columnКодТипаДокумента}, true));
                this.columnКодТипаДокумента.AutoIncrement = true;
                this.columnКодТипаДокумента.AllowDBNull = false;
                this.columnКодТипаДокумента.ReadOnly = true;
                this.columnКодТипаДокумента.Unique = true;
                this.columnИмяПредставления.AllowDBNull = false;
                this.columnНаличиеФормы.AllowDBNull = false;
                this.columnURL.AllowDBNull = false;
                this.columnSearchURL.AllowDBNull = false;
                this.columnИсходящий.AllowDBNull = false;
                this.columnТипАвтогенерацииНомера.AllowDBNull = false;
                this.columnАлгоритмАвтогенерацииНомера.AllowDBNull = false;
                this.columnChanged.AllowDBNull = false;
                this.columnL.AllowDBNull = false;
                this.columnR.AllowDBNull = false;
                this.columnИзменил.AllowDBNull = false;
                this.columnИзменено.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ТипыДокументовRow NewТипыДокументовRow() {
                return ((ТипыДокументовRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ТипыДокументовRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ТипыДокументовRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ТипыДокументовRowChanged != null)) {
                    this.ТипыДокументовRowChanged(this, new ТипыДокументовRowChangeEvent(((ТипыДокументовRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ТипыДокументовRowChanging != null)) {
                    this.ТипыДокументовRowChanging(this, new ТипыДокументовRowChangeEvent(((ТипыДокументовRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ТипыДокументовRowDeleted != null)) {
                    this.ТипыДокументовRowDeleted(this, new ТипыДокументовRowChangeEvent(((ТипыДокументовRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ТипыДокументовRowDeleting != null)) {
                    this.ТипыДокументовRowDeleting(this, new ТипыДокументовRowChangeEvent(((ТипыДокументовRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveТипыДокументовRow(ТипыДокументовRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSDocs ds = new DSDocs();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ТипыДокументовDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ПоляДокументовDataTable : global::System.Data.TypedTableBase<ПоляДокументовRow> {
            
            private global::System.Data.DataColumn columnКодПоляДокумента;
            
            private global::System.Data.DataColumn columnКодТипаДокумента;
            
            private global::System.Data.DataColumn columnПорядокПоляДокумента;
            
            private global::System.Data.DataColumn columnПолеДокумента;
            
            private global::System.Data.DataColumn columnКолонкаТаблицы;
            
            private global::System.Data.DataColumn columnОбязательность;
            
            private global::System.Data.DataColumn columnКодТипаПоля;
            
            private global::System.Data.DataColumn columnЧислоДесятичныхЗнаков;
            
            private global::System.Data.DataColumn columnURLПоиска;
            
            private global::System.Data.DataColumn columnПараметрыПоиска;
            
            private global::System.Data.DataColumn columnЗаголовокФормыПоиска;
            
            private global::System.Data.DataColumn columnСтрокаПодключения;
            
            private global::System.Data.DataColumn columnSQLЗапрос;
            
            private global::System.Data.DataColumn columnИзменил;
            
            private global::System.Data.DataColumn columnИзменено;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ПоляДокументовDataTable() {
                this.TableName = "ПоляДокументов";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ПоляДокументовDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ПоляДокументовDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодПоляДокументаColumn {
                get {
                    return this.columnКодПоляДокумента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодТипаДокументаColumn {
                get {
                    return this.columnКодТипаДокумента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ПорядокПоляДокументаColumn {
                get {
                    return this.columnПорядокПоляДокумента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ПолеДокументаColumn {
                get {
                    return this.columnПолеДокумента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КолонкаТаблицыColumn {
                get {
                    return this.columnКолонкаТаблицы;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ОбязательностьColumn {
                get {
                    return this.columnОбязательность;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодТипаПоляColumn {
                get {
                    return this.columnКодТипаПоля;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ЧислоДесятичныхЗнаковColumn {
                get {
                    return this.columnЧислоДесятичныхЗнаков;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn URLПоискаColumn {
                get {
                    return this.columnURLПоиска;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ПараметрыПоискаColumn {
                get {
                    return this.columnПараметрыПоиска;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ЗаголовокФормыПоискаColumn {
                get {
                    return this.columnЗаголовокФормыПоиска;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn СтрокаПодключенияColumn {
                get {
                    return this.columnСтрокаПодключения;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SQLЗапросColumn {
                get {
                    return this.columnSQLЗапрос;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ИзменилColumn {
                get {
                    return this.columnИзменил;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ИзмененоColumn {
                get {
                    return this.columnИзменено;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ПоляДокументовRow this[int index] {
                get {
                    return ((ПоляДокументовRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ПоляДокументовRowChangeEventHandler ПоляДокументовRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ПоляДокументовRowChangeEventHandler ПоляДокументовRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ПоляДокументовRowChangeEventHandler ПоляДокументовRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ПоляДокументовRowChangeEventHandler ПоляДокументовRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddПоляДокументовRow(ПоляДокументовRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ПоляДокументовRow AddПоляДокументовRow(int КодТипаДокумента, int ПорядокПоляДокумента, string ПолеДокумента, string КолонкаТаблицы, bool Обязательность, int КодТипаПоля, int ЧислоДесятичныхЗнаков, string URLПоиска, string ПараметрыПоиска, string ЗаголовокФормыПоиска, string СтрокаПодключения, string SQLЗапрос, int Изменил, System.DateTime Изменено) {
                ПоляДокументовRow rowПоляДокументовRow = ((ПоляДокументовRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        КодТипаДокумента,
                        ПорядокПоляДокумента,
                        ПолеДокумента,
                        КолонкаТаблицы,
                        Обязательность,
                        КодТипаПоля,
                        ЧислоДесятичныхЗнаков,
                        URLПоиска,
                        ПараметрыПоиска,
                        ЗаголовокФормыПоиска,
                        СтрокаПодключения,
                        SQLЗапрос,
                        Изменил,
                        Изменено};
                rowПоляДокументовRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowПоляДокументовRow);
                return rowПоляДокументовRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ПоляДокументовRow FindByКодПоляДокумента(int КодПоляДокумента) {
                return ((ПоляДокументовRow)(this.Rows.Find(new object[] {
                            КодПоляДокумента})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ПоляДокументовDataTable cln = ((ПоляДокументовDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ПоляДокументовDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnКодПоляДокумента = base.Columns["КодПоляДокумента"];
                this.columnКодТипаДокумента = base.Columns["КодТипаДокумента"];
                this.columnПорядокПоляДокумента = base.Columns["ПорядокПоляДокумента"];
                this.columnПолеДокумента = base.Columns["ПолеДокумента"];
                this.columnКолонкаТаблицы = base.Columns["КолонкаТаблицы"];
                this.columnОбязательность = base.Columns["Обязательность"];
                this.columnКодТипаПоля = base.Columns["КодТипаПоля"];
                this.columnЧислоДесятичныхЗнаков = base.Columns["ЧислоДесятичныхЗнаков"];
                this.columnURLПоиска = base.Columns["URLПоиска"];
                this.columnПараметрыПоиска = base.Columns["ПараметрыПоиска"];
                this.columnЗаголовокФормыПоиска = base.Columns["ЗаголовокФормыПоиска"];
                this.columnСтрокаПодключения = base.Columns["СтрокаПодключения"];
                this.columnSQLЗапрос = base.Columns["SQLЗапрос"];
                this.columnИзменил = base.Columns["Изменил"];
                this.columnИзменено = base.Columns["Изменено"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnКодПоляДокумента = new global::System.Data.DataColumn("КодПоляДокумента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодПоляДокумента);
                this.columnКодТипаДокумента = new global::System.Data.DataColumn("КодТипаДокумента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодТипаДокумента);
                this.columnПорядокПоляДокумента = new global::System.Data.DataColumn("ПорядокПоляДокумента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПорядокПоляДокумента);
                this.columnПолеДокумента = new global::System.Data.DataColumn("ПолеДокумента", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПолеДокумента);
                this.columnКолонкаТаблицы = new global::System.Data.DataColumn("КолонкаТаблицы", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКолонкаТаблицы);
                this.columnОбязательность = new global::System.Data.DataColumn("Обязательность", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОбязательность);
                this.columnКодТипаПоля = new global::System.Data.DataColumn("КодТипаПоля", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодТипаПоля);
                this.columnЧислоДесятичныхЗнаков = new global::System.Data.DataColumn("ЧислоДесятичныхЗнаков", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЧислоДесятичныхЗнаков);
                this.columnURLПоиска = new global::System.Data.DataColumn("URLПоиска", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnURLПоиска);
                this.columnПараметрыПоиска = new global::System.Data.DataColumn("ПараметрыПоиска", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПараметрыПоиска);
                this.columnЗаголовокФормыПоиска = new global::System.Data.DataColumn("ЗаголовокФормыПоиска", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗаголовокФормыПоиска);
                this.columnСтрокаПодключения = new global::System.Data.DataColumn("СтрокаПодключения", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСтрокаПодключения);
                this.columnSQLЗапрос = new global::System.Data.DataColumn("SQLЗапрос", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQLЗапрос);
                this.columnИзменил = new global::System.Data.DataColumn("Изменил", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИзменил);
                this.columnИзменено = new global::System.Data.DataColumn("Изменено", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИзменено);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("DSDocsKey2", new global::System.Data.DataColumn[] {
                                this.columnКодПоляДокумента}, true));
                this.columnКодПоляДокумента.AutoIncrement = true;
                this.columnКодПоляДокумента.AllowDBNull = false;
                this.columnКодПоляДокумента.ReadOnly = true;
                this.columnКодПоляДокумента.Unique = true;
                this.columnКодТипаДокумента.AllowDBNull = false;
                this.columnПорядокПоляДокумента.AllowDBNull = false;
                this.columnПолеДокумента.AllowDBNull = false;
                this.columnКолонкаТаблицы.AllowDBNull = false;
                this.columnОбязательность.AllowDBNull = false;
                this.columnКодТипаПоля.AllowDBNull = false;
                this.columnЧислоДесятичныхЗнаков.AllowDBNull = false;
                this.columnURLПоиска.AllowDBNull = false;
                this.columnПараметрыПоиска.AllowDBNull = false;
                this.columnЗаголовокФормыПоиска.AllowDBNull = false;
                this.columnСтрокаПодключения.AllowDBNull = false;
                this.columnSQLЗапрос.AllowDBNull = false;
                this.columnИзменил.AllowDBNull = false;
                this.columnИзменено.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ПоляДокументовRow NewПоляДокументовRow() {
                return ((ПоляДокументовRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ПоляДокументовRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ПоляДокументовRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ПоляДокументовRowChanged != null)) {
                    this.ПоляДокументовRowChanged(this, new ПоляДокументовRowChangeEvent(((ПоляДокументовRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ПоляДокументовRowChanging != null)) {
                    this.ПоляДокументовRowChanging(this, new ПоляДокументовRowChangeEvent(((ПоляДокументовRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ПоляДокументовRowDeleted != null)) {
                    this.ПоляДокументовRowDeleted(this, new ПоляДокументовRowChangeEvent(((ПоляДокументовRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ПоляДокументовRowDeleting != null)) {
                    this.ПоляДокументовRowDeleting(this, new ПоляДокументовRowChangeEvent(((ПоляДокументовRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveПоляДокументовRow(ПоляДокументовRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSDocs ds = new DSDocs();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ПоляДокументовDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ТипыПолейDataTable : global::System.Data.TypedTableBase<ТипыПолейRow> {
            
            private global::System.Data.DataColumn columnКодТипаПоля;
            
            private global::System.Data.DataColumn columnТипПоля;
            
            private global::System.Data.DataColumn columnТипыДанных;
            
            private global::System.Data.DataColumn columnИмяПоля;
            
            private global::System.Data.DataColumn columnНужноЧислоДесятичныхЗнаков;
            
            private global::System.Data.DataColumn columnНуженURLПоиска;
            
            private global::System.Data.DataColumn columnНуженЗаголовокФормыПоиска;
            
            private global::System.Data.DataColumn columnНуженSQLЗапрос;
            
            private global::System.Data.DataColumn columnСервис;
            
            private global::System.Data.DataColumn columnСущность;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ТипыПолейDataTable() {
                this.TableName = "ТипыПолей";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ТипыПолейDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ТипыПолейDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодТипаПоляColumn {
                get {
                    return this.columnКодТипаПоля;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ТипПоляColumn {
                get {
                    return this.columnТипПоля;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ТипыДанныхColumn {
                get {
                    return this.columnТипыДанных;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ИмяПоляColumn {
                get {
                    return this.columnИмяПоля;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn НужноЧислоДесятичныхЗнаковColumn {
                get {
                    return this.columnНужноЧислоДесятичныхЗнаков;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn НуженURLПоискаColumn {
                get {
                    return this.columnНуженURLПоиска;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn НуженЗаголовокФормыПоискаColumn {
                get {
                    return this.columnНуженЗаголовокФормыПоиска;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn НуженSQLЗапросColumn {
                get {
                    return this.columnНуженSQLЗапрос;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn СервисColumn {
                get {
                    return this.columnСервис;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn СущностьColumn {
                get {
                    return this.columnСущность;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ТипыПолейRow this[int index] {
                get {
                    return ((ТипыПолейRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ТипыПолейRowChangeEventHandler ТипыПолейRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ТипыПолейRowChangeEventHandler ТипыПолейRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ТипыПолейRowChangeEventHandler ТипыПолейRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ТипыПолейRowChangeEventHandler ТипыПолейRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddТипыПолейRow(ТипыПолейRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ТипыПолейRow AddТипыПолейRow(int КодТипаПоля, string ТипПоля, string ТипыДанных, string ИмяПоля, bool НужноЧислоДесятичныхЗнаков, bool НуженURLПоиска, bool НуженЗаголовокФормыПоиска, bool НуженSQLЗапрос, string Сервис, string Сущность) {
                ТипыПолейRow rowТипыПолейRow = ((ТипыПолейRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        КодТипаПоля,
                        ТипПоля,
                        ТипыДанных,
                        ИмяПоля,
                        НужноЧислоДесятичныхЗнаков,
                        НуженURLПоиска,
                        НуженЗаголовокФормыПоиска,
                        НуженSQLЗапрос,
                        Сервис,
                        Сущность};
                rowТипыПолейRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowТипыПолейRow);
                return rowТипыПолейRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ТипыПолейRow FindByКодТипаПоля(int КодТипаПоля) {
                return ((ТипыПолейRow)(this.Rows.Find(new object[] {
                            КодТипаПоля})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ТипыПолейDataTable cln = ((ТипыПолейDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ТипыПолейDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnКодТипаПоля = base.Columns["КодТипаПоля"];
                this.columnТипПоля = base.Columns["ТипПоля"];
                this.columnТипыДанных = base.Columns["ТипыДанных"];
                this.columnИмяПоля = base.Columns["ИмяПоля"];
                this.columnНужноЧислоДесятичныхЗнаков = base.Columns["НужноЧислоДесятичныхЗнаков"];
                this.columnНуженURLПоиска = base.Columns["НуженURLПоиска"];
                this.columnНуженЗаголовокФормыПоиска = base.Columns["НуженЗаголовокФормыПоиска"];
                this.columnНуженSQLЗапрос = base.Columns["НуженSQLЗапрос"];
                this.columnСервис = base.Columns["Сервис"];
                this.columnСущность = base.Columns["Сущность"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnКодТипаПоля = new global::System.Data.DataColumn("КодТипаПоля", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодТипаПоля);
                this.columnТипПоля = new global::System.Data.DataColumn("ТипПоля", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТипПоля);
                this.columnТипыДанных = new global::System.Data.DataColumn("ТипыДанных", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТипыДанных);
                this.columnИмяПоля = new global::System.Data.DataColumn("ИмяПоля", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИмяПоля);
                this.columnНужноЧислоДесятичныхЗнаков = new global::System.Data.DataColumn("НужноЧислоДесятичныхЗнаков", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНужноЧислоДесятичныхЗнаков);
                this.columnНуженURLПоиска = new global::System.Data.DataColumn("НуженURLПоиска", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНуженURLПоиска);
                this.columnНуженЗаголовокФормыПоиска = new global::System.Data.DataColumn("НуженЗаголовокФормыПоиска", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНуженЗаголовокФормыПоиска);
                this.columnНуженSQLЗапрос = new global::System.Data.DataColumn("НуженSQLЗапрос", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНуженSQLЗапрос);
                this.columnСервис = new global::System.Data.DataColumn("Сервис", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСервис);
                this.columnСущность = new global::System.Data.DataColumn("Сущность", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСущность);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("DSDocsKey3", new global::System.Data.DataColumn[] {
                                this.columnКодТипаПоля}, true));
                this.columnКодТипаПоля.AllowDBNull = false;
                this.columnКодТипаПоля.Unique = true;
                this.columnТипПоля.AllowDBNull = false;
                this.columnТипыДанных.AllowDBNull = false;
                this.columnИмяПоля.AllowDBNull = false;
                this.columnНужноЧислоДесятичныхЗнаков.AllowDBNull = false;
                this.columnНуженURLПоиска.AllowDBNull = false;
                this.columnНуженЗаголовокФормыПоиска.AllowDBNull = false;
                this.columnНуженSQLЗапрос.AllowDBNull = false;
                this.columnСервис.AllowDBNull = false;
                this.columnСущность.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ТипыПолейRow NewТипыПолейRow() {
                return ((ТипыПолейRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ТипыПолейRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ТипыПолейRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ТипыПолейRowChanged != null)) {
                    this.ТипыПолейRowChanged(this, new ТипыПолейRowChangeEvent(((ТипыПолейRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ТипыПолейRowChanging != null)) {
                    this.ТипыПолейRowChanging(this, new ТипыПолейRowChangeEvent(((ТипыПолейRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ТипыПолейRowDeleted != null)) {
                    this.ТипыПолейRowDeleted(this, new ТипыПолейRowChangeEvent(((ТипыПолейRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ТипыПолейRowDeleting != null)) {
                    this.ТипыПолейRowDeleting(this, new ТипыПолейRowChangeEvent(((ТипыПолейRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveТипыПолейRow(ТипыПолейRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSDocs ds = new DSDocs();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ТипыПолейDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ДокументыDataTable : global::System.Data.TypedTableBase<ДокументыRow> {
            
            private global::System.Data.DataColumn columnКодДокумента;
            
            private global::System.Data.DataColumn columnКодТипаДокумента;
            
            private global::System.Data.DataColumn columnНомерДокумента;
            
            private global::System.Data.DataColumn columnДатаДокумента;
            
            private global::System.Data.DataColumn columnОписание;
            
            private global::System.Data.DataColumn columnКодИзображенияДокументаОсновного;
            
            private global::System.Data.DataColumn columnНомерInt;
            
            private global::System.Data.DataColumn columnНомерДокументаRL;
            
            private global::System.Data.DataColumn columnИзменил;
            
            private global::System.Data.DataColumn columnИзменено;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ДокументыDataTable() {
                this.TableName = "Документы";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ДокументыDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ДокументыDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодДокументаColumn {
                get {
                    return this.columnКодДокумента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодТипаДокументаColumn {
                get {
                    return this.columnКодТипаДокумента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn НомерДокументаColumn {
                get {
                    return this.columnНомерДокумента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ДатаДокументаColumn {
                get {
                    return this.columnДатаДокумента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ОписаниеColumn {
                get {
                    return this.columnОписание;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодИзображенияДокументаОсновногоColumn {
                get {
                    return this.columnКодИзображенияДокументаОсновного;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn НомерIntColumn {
                get {
                    return this.columnНомерInt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn НомерДокументаRLColumn {
                get {
                    return this.columnНомерДокументаRL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ИзменилColumn {
                get {
                    return this.columnИзменил;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ИзмененоColumn {
                get {
                    return this.columnИзменено;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ДокументыRow this[int index] {
                get {
                    return ((ДокументыRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ДокументыRowChangeEventHandler ДокументыRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ДокументыRowChangeEventHandler ДокументыRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ДокументыRowChangeEventHandler ДокументыRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ДокументыRowChangeEventHandler ДокументыRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddДокументыRow(ДокументыRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ДокументыRow AddДокументыRow(int КодТипаДокумента, string НомерДокумента, System.DateTime ДатаДокумента, string Описание, int КодИзображенияДокументаОсновного, int НомерInt, string НомерДокументаRL, int Изменил, System.DateTime Изменено) {
                ДокументыRow rowДокументыRow = ((ДокументыRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        КодТипаДокумента,
                        НомерДокумента,
                        ДатаДокумента,
                        Описание,
                        КодИзображенияДокументаОсновного,
                        НомерInt,
                        НомерДокументаRL,
                        Изменил,
                        Изменено};
                rowДокументыRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowДокументыRow);
                return rowДокументыRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ДокументыRow FindByКодДокумента(int КодДокумента) {
                return ((ДокументыRow)(this.Rows.Find(new object[] {
                            КодДокумента})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ДокументыDataTable cln = ((ДокументыDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ДокументыDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnКодДокумента = base.Columns["КодДокумента"];
                this.columnКодТипаДокумента = base.Columns["КодТипаДокумента"];
                this.columnНомерДокумента = base.Columns["НомерДокумента"];
                this.columnДатаДокумента = base.Columns["ДатаДокумента"];
                this.columnОписание = base.Columns["Описание"];
                this.columnКодИзображенияДокументаОсновного = base.Columns["КодИзображенияДокументаОсновного"];
                this.columnНомерInt = base.Columns["НомерInt"];
                this.columnНомерДокументаRL = base.Columns["НомерДокументаRL"];
                this.columnИзменил = base.Columns["Изменил"];
                this.columnИзменено = base.Columns["Изменено"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnКодДокумента = new global::System.Data.DataColumn("КодДокумента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодДокумента);
                this.columnКодТипаДокумента = new global::System.Data.DataColumn("КодТипаДокумента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодТипаДокумента);
                this.columnНомерДокумента = new global::System.Data.DataColumn("НомерДокумента", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНомерДокумента);
                this.columnДатаДокумента = new global::System.Data.DataColumn("ДатаДокумента", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДатаДокумента);
                this.columnОписание = new global::System.Data.DataColumn("Описание", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnОписание);
                this.columnКодИзображенияДокументаОсновного = new global::System.Data.DataColumn("КодИзображенияДокументаОсновного", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодИзображенияДокументаОсновного);
                this.columnНомерInt = new global::System.Data.DataColumn("НомерInt", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНомерInt);
                this.columnНомерДокументаRL = new global::System.Data.DataColumn("НомерДокументаRL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНомерДокументаRL);
                this.columnИзменил = new global::System.Data.DataColumn("Изменил", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИзменил);
                this.columnИзменено = new global::System.Data.DataColumn("Изменено", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИзменено);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("DSDocsKey4", new global::System.Data.DataColumn[] {
                                this.columnКодДокумента}, true));
                this.columnКодДокумента.AutoIncrement = true;
                this.columnКодДокумента.AutoIncrementSeed = -1;
                this.columnКодДокумента.AutoIncrementStep = -1;
                this.columnКодДокумента.AllowDBNull = false;
                this.columnКодДокумента.ReadOnly = true;
                this.columnКодДокумента.Unique = true;
                this.columnКодТипаДокумента.AllowDBNull = false;
                this.columnНомерДокумента.AllowDBNull = false;
                this.columnОписание.AllowDBNull = false;
                this.columnИзменил.AllowDBNull = false;
                this.columnИзменено.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ДокументыRow NewДокументыRow() {
                return ((ДокументыRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ДокументыRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ДокументыRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ДокументыRowChanged != null)) {
                    this.ДокументыRowChanged(this, new ДокументыRowChangeEvent(((ДокументыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ДокументыRowChanging != null)) {
                    this.ДокументыRowChanging(this, new ДокументыRowChangeEvent(((ДокументыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ДокументыRowDeleted != null)) {
                    this.ДокументыRowDeleted(this, new ДокументыRowChangeEvent(((ДокументыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ДокументыRowDeleting != null)) {
                    this.ДокументыRowDeleting(this, new ДокументыRowChangeEvent(((ДокументыRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveДокументыRow(ДокументыRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSDocs ds = new DSDocs();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ДокументыDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ДокументыДанныеDataTable : global::System.Data.TypedTableBase<ДокументыДанныеRow> {
            
            private global::System.Data.DataColumn columnКодДокумента;
            
            private global::System.Data.DataColumn columnИзменил;
            
            private global::System.Data.DataColumn columnИзменено;
            
            private global::System.Data.DataColumn columnКодЛица1;
            
            private global::System.Data.DataColumn columnКодЛица2;
            
            private global::System.Data.DataColumn columnКодЛица3;
            
            private global::System.Data.DataColumn columnКодЛица4;
            
            private global::System.Data.DataColumn columnКодСклада1;
            
            private global::System.Data.DataColumn columnКодСклада2;
            
            private global::System.Data.DataColumn columnКодСклада3;
            
            private global::System.Data.DataColumn columnКодСклада4;
            
            private global::System.Data.DataColumn columnКодРесурса1;
            
            private global::System.Data.DataColumn columnКодРесурса2;
            
            private global::System.Data.DataColumn columnКодСотрудника1;
            
            private global::System.Data.DataColumn columnКодСотрудника2;
            
            private global::System.Data.DataColumn columnКодБизнесПроекта;
            
            private global::System.Data.DataColumn columnДата2;
            
            private global::System.Data.DataColumn columnДата3;
            
            private global::System.Data.DataColumn columnДата4;
            
            private global::System.Data.DataColumn columnДата5;
            
            private global::System.Data.DataColumn columnFlag1;
            
            private global::System.Data.DataColumn columnFlag2;
            
            private global::System.Data.DataColumn columnFlag3;
            
            private global::System.Data.DataColumn columnFlag4;
            
            private global::System.Data.DataColumn columnFlag5;
            
            private global::System.Data.DataColumn columnInt1;
            
            private global::System.Data.DataColumn columnInt2;
            
            private global::System.Data.DataColumn columnInt3;
            
            private global::System.Data.DataColumn columnInt4;
            
            private global::System.Data.DataColumn columnInt5;
            
            private global::System.Data.DataColumn columnInt6;
            
            private global::System.Data.DataColumn columnInt7;
            
            private global::System.Data.DataColumn columnText50_1;
            
            private global::System.Data.DataColumn columnText50_2;
            
            private global::System.Data.DataColumn columnText50_3;
            
            private global::System.Data.DataColumn columnText50_4;
            
            private global::System.Data.DataColumn columnText50_5;
            
            private global::System.Data.DataColumn columnText50_6;
            
            private global::System.Data.DataColumn columnText50_7;
            
            private global::System.Data.DataColumn columnText50_8;
            
            private global::System.Data.DataColumn columnText50_9;
            
            private global::System.Data.DataColumn columnText50_10;
            
            private global::System.Data.DataColumn columnText100_1;
            
            private global::System.Data.DataColumn columnText100_2;
            
            private global::System.Data.DataColumn columnText100_3;
            
            private global::System.Data.DataColumn columnText100_4;
            
            private global::System.Data.DataColumn columnText100_5;
            
            private global::System.Data.DataColumn columnText100_6;
            
            private global::System.Data.DataColumn columnText300_1;
            
            private global::System.Data.DataColumn columnText300_2;
            
            private global::System.Data.DataColumn columnText300_3;
            
            private global::System.Data.DataColumn columnText300_4;
            
            private global::System.Data.DataColumn columnText300_5;
            
            private global::System.Data.DataColumn columnText300_6;
            
            private global::System.Data.DataColumn columnText1000_1;
            
            private global::System.Data.DataColumn columnText1000_2;
            
            private global::System.Data.DataColumn columnMoney1;
            
            private global::System.Data.DataColumn columnMoney2;
            
            private global::System.Data.DataColumn columnMoney3;
            
            private global::System.Data.DataColumn columnMoney4;
            
            private global::System.Data.DataColumn columnMoney5;
            
            private global::System.Data.DataColumn columnMoney6;
            
            private global::System.Data.DataColumn columnMoney7;
            
            private global::System.Data.DataColumn columnMoney8;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ДокументыДанныеDataTable() {
                this.TableName = "ДокументыДанные";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ДокументыДанныеDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ДокументыДанныеDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодДокументаColumn {
                get {
                    return this.columnКодДокумента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ИзменилColumn {
                get {
                    return this.columnИзменил;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ИзмененоColumn {
                get {
                    return this.columnИзменено;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодЛица1Column {
                get {
                    return this.columnКодЛица1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодЛица2Column {
                get {
                    return this.columnКодЛица2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодЛица3Column {
                get {
                    return this.columnКодЛица3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодЛица4Column {
                get {
                    return this.columnКодЛица4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодСклада1Column {
                get {
                    return this.columnКодСклада1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодСклада2Column {
                get {
                    return this.columnКодСклада2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодСклада3Column {
                get {
                    return this.columnКодСклада3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодСклада4Column {
                get {
                    return this.columnКодСклада4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодРесурса1Column {
                get {
                    return this.columnКодРесурса1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодРесурса2Column {
                get {
                    return this.columnКодРесурса2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодСотрудника1Column {
                get {
                    return this.columnКодСотрудника1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодСотрудника2Column {
                get {
                    return this.columnКодСотрудника2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодБизнесПроектаColumn {
                get {
                    return this.columnКодБизнесПроекта;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Дата2Column {
                get {
                    return this.columnДата2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Дата3Column {
                get {
                    return this.columnДата3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Дата4Column {
                get {
                    return this.columnДата4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Дата5Column {
                get {
                    return this.columnДата5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Flag1Column {
                get {
                    return this.columnFlag1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Flag2Column {
                get {
                    return this.columnFlag2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Flag3Column {
                get {
                    return this.columnFlag3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Flag4Column {
                get {
                    return this.columnFlag4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Flag5Column {
                get {
                    return this.columnFlag5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Int1Column {
                get {
                    return this.columnInt1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Int2Column {
                get {
                    return this.columnInt2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Int3Column {
                get {
                    return this.columnInt3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Int4Column {
                get {
                    return this.columnInt4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Int5Column {
                get {
                    return this.columnInt5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Int6Column {
                get {
                    return this.columnInt6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Int7Column {
                get {
                    return this.columnInt7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Text50_1Column {
                get {
                    return this.columnText50_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Text50_2Column {
                get {
                    return this.columnText50_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Text50_3Column {
                get {
                    return this.columnText50_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Text50_4Column {
                get {
                    return this.columnText50_4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Text50_5Column {
                get {
                    return this.columnText50_5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Text50_6Column {
                get {
                    return this.columnText50_6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Text50_7Column {
                get {
                    return this.columnText50_7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Text50_8Column {
                get {
                    return this.columnText50_8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Text50_9Column {
                get {
                    return this.columnText50_9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Text50_10Column {
                get {
                    return this.columnText50_10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Text100_1Column {
                get {
                    return this.columnText100_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Text100_2Column {
                get {
                    return this.columnText100_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Text100_3Column {
                get {
                    return this.columnText100_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Text100_4Column {
                get {
                    return this.columnText100_4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Text100_5Column {
                get {
                    return this.columnText100_5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Text100_6Column {
                get {
                    return this.columnText100_6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Text300_1Column {
                get {
                    return this.columnText300_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Text300_2Column {
                get {
                    return this.columnText300_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Text300_3Column {
                get {
                    return this.columnText300_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Text300_4Column {
                get {
                    return this.columnText300_4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Text300_5Column {
                get {
                    return this.columnText300_5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Text300_6Column {
                get {
                    return this.columnText300_6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Text1000_1Column {
                get {
                    return this.columnText1000_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Text1000_2Column {
                get {
                    return this.columnText1000_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Money1Column {
                get {
                    return this.columnMoney1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Money2Column {
                get {
                    return this.columnMoney2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Money3Column {
                get {
                    return this.columnMoney3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Money4Column {
                get {
                    return this.columnMoney4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Money5Column {
                get {
                    return this.columnMoney5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Money6Column {
                get {
                    return this.columnMoney6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Money7Column {
                get {
                    return this.columnMoney7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Money8Column {
                get {
                    return this.columnMoney8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ДокументыДанныеRow this[int index] {
                get {
                    return ((ДокументыДанныеRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ДокументыДанныеRowChangeEventHandler ДокументыДанныеRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ДокументыДанныеRowChangeEventHandler ДокументыДанныеRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ДокументыДанныеRowChangeEventHandler ДокументыДанныеRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ДокументыДанныеRowChangeEventHandler ДокументыДанныеRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddДокументыДанныеRow(ДокументыДанныеRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ДокументыДанныеRow AddДокументыДанныеRow(
                        ДокументыRow parentДокументыRowByДокументыДокументыДанные, 
                        int Изменил, 
                        System.DateTime Изменено, 
                        int КодЛица1, 
                        int КодЛица2, 
                        int КодЛица3, 
                        int КодЛица4, 
                        int КодСклада1, 
                        int КодСклада2, 
                        int КодСклада3, 
                        int КодСклада4, 
                        int КодРесурса1, 
                        int КодРесурса2, 
                        int КодСотрудника1, 
                        int КодСотрудника2, 
                        int КодБизнесПроекта, 
                        System.DateTime Дата2, 
                        System.DateTime Дата3, 
                        System.DateTime Дата4, 
                        System.DateTime Дата5, 
                        byte Flag1, 
                        byte Flag2, 
                        byte Flag3, 
                        byte Flag4, 
                        byte Flag5, 
                        int Int1, 
                        int Int2, 
                        int Int3, 
                        int Int4, 
                        int Int5, 
                        int Int6, 
                        int Int7, 
                        string Text50_1, 
                        string Text50_2, 
                        string Text50_3, 
                        string Text50_4, 
                        string Text50_5, 
                        string Text50_6, 
                        string Text50_7, 
                        string Text50_8, 
                        string Text50_9, 
                        string Text50_10, 
                        string Text100_1, 
                        string Text100_2, 
                        string Text100_3, 
                        string Text100_4, 
                        string Text100_5, 
                        string Text100_6, 
                        string Text300_1, 
                        string Text300_2, 
                        string Text300_3, 
                        string Text300_4, 
                        string Text300_5, 
                        string Text300_6, 
                        string Text1000_1, 
                        string Text1000_2, 
                        decimal Money1, 
                        decimal Money2, 
                        decimal Money3, 
                        decimal Money4, 
                        decimal Money5, 
                        decimal Money6, 
                        decimal Money7, 
                        decimal Money8) {
                ДокументыДанныеRow rowДокументыДанныеRow = ((ДокументыДанныеRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Изменил,
                        Изменено,
                        КодЛица1,
                        КодЛица2,
                        КодЛица3,
                        КодЛица4,
                        КодСклада1,
                        КодСклада2,
                        КодСклада3,
                        КодСклада4,
                        КодРесурса1,
                        КодРесурса2,
                        КодСотрудника1,
                        КодСотрудника2,
                        КодБизнесПроекта,
                        Дата2,
                        Дата3,
                        Дата4,
                        Дата5,
                        Flag1,
                        Flag2,
                        Flag3,
                        Flag4,
                        Flag5,
                        Int1,
                        Int2,
                        Int3,
                        Int4,
                        Int5,
                        Int6,
                        Int7,
                        Text50_1,
                        Text50_2,
                        Text50_3,
                        Text50_4,
                        Text50_5,
                        Text50_6,
                        Text50_7,
                        Text50_8,
                        Text50_9,
                        Text50_10,
                        Text100_1,
                        Text100_2,
                        Text100_3,
                        Text100_4,
                        Text100_5,
                        Text100_6,
                        Text300_1,
                        Text300_2,
                        Text300_3,
                        Text300_4,
                        Text300_5,
                        Text300_6,
                        Text1000_1,
                        Text1000_2,
                        Money1,
                        Money2,
                        Money3,
                        Money4,
                        Money5,
                        Money6,
                        Money7,
                        Money8};
                if ((parentДокументыRowByДокументыДокументыДанные != null)) {
                    columnValuesArray[0] = parentДокументыRowByДокументыДокументыДанные[0];
                }
                rowДокументыДанныеRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowДокументыДанныеRow);
                return rowДокументыДанныеRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ДокументыДанныеRow FindByКодДокумента(int КодДокумента) {
                return ((ДокументыДанныеRow)(this.Rows.Find(new object[] {
                            КодДокумента})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ДокументыДанныеDataTable cln = ((ДокументыДанныеDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ДокументыДанныеDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnКодДокумента = base.Columns["КодДокумента"];
                this.columnИзменил = base.Columns["Изменил"];
                this.columnИзменено = base.Columns["Изменено"];
                this.columnКодЛица1 = base.Columns["КодЛица1"];
                this.columnКодЛица2 = base.Columns["КодЛица2"];
                this.columnКодЛица3 = base.Columns["КодЛица3"];
                this.columnКодЛица4 = base.Columns["КодЛица4"];
                this.columnКодСклада1 = base.Columns["КодСклада1"];
                this.columnКодСклада2 = base.Columns["КодСклада2"];
                this.columnКодСклада3 = base.Columns["КодСклада3"];
                this.columnКодСклада4 = base.Columns["КодСклада4"];
                this.columnКодРесурса1 = base.Columns["КодРесурса1"];
                this.columnКодРесурса2 = base.Columns["КодРесурса2"];
                this.columnКодСотрудника1 = base.Columns["КодСотрудника1"];
                this.columnКодСотрудника2 = base.Columns["КодСотрудника2"];
                this.columnКодБизнесПроекта = base.Columns["КодБизнесПроекта"];
                this.columnДата2 = base.Columns["Дата2"];
                this.columnДата3 = base.Columns["Дата3"];
                this.columnДата4 = base.Columns["Дата4"];
                this.columnДата5 = base.Columns["Дата5"];
                this.columnFlag1 = base.Columns["Flag1"];
                this.columnFlag2 = base.Columns["Flag2"];
                this.columnFlag3 = base.Columns["Flag3"];
                this.columnFlag4 = base.Columns["Flag4"];
                this.columnFlag5 = base.Columns["Flag5"];
                this.columnInt1 = base.Columns["Int1"];
                this.columnInt2 = base.Columns["Int2"];
                this.columnInt3 = base.Columns["Int3"];
                this.columnInt4 = base.Columns["Int4"];
                this.columnInt5 = base.Columns["Int5"];
                this.columnInt6 = base.Columns["Int6"];
                this.columnInt7 = base.Columns["Int7"];
                this.columnText50_1 = base.Columns["Text50_1"];
                this.columnText50_2 = base.Columns["Text50_2"];
                this.columnText50_3 = base.Columns["Text50_3"];
                this.columnText50_4 = base.Columns["Text50_4"];
                this.columnText50_5 = base.Columns["Text50_5"];
                this.columnText50_6 = base.Columns["Text50_6"];
                this.columnText50_7 = base.Columns["Text50_7"];
                this.columnText50_8 = base.Columns["Text50_8"];
                this.columnText50_9 = base.Columns["Text50_9"];
                this.columnText50_10 = base.Columns["Text50_10"];
                this.columnText100_1 = base.Columns["Text100_1"];
                this.columnText100_2 = base.Columns["Text100_2"];
                this.columnText100_3 = base.Columns["Text100_3"];
                this.columnText100_4 = base.Columns["Text100_4"];
                this.columnText100_5 = base.Columns["Text100_5"];
                this.columnText100_6 = base.Columns["Text100_6"];
                this.columnText300_1 = base.Columns["Text300_1"];
                this.columnText300_2 = base.Columns["Text300_2"];
                this.columnText300_3 = base.Columns["Text300_3"];
                this.columnText300_4 = base.Columns["Text300_4"];
                this.columnText300_5 = base.Columns["Text300_5"];
                this.columnText300_6 = base.Columns["Text300_6"];
                this.columnText1000_1 = base.Columns["Text1000_1"];
                this.columnText1000_2 = base.Columns["Text1000_2"];
                this.columnMoney1 = base.Columns["Money1"];
                this.columnMoney2 = base.Columns["Money2"];
                this.columnMoney3 = base.Columns["Money3"];
                this.columnMoney4 = base.Columns["Money4"];
                this.columnMoney5 = base.Columns["Money5"];
                this.columnMoney6 = base.Columns["Money6"];
                this.columnMoney7 = base.Columns["Money7"];
                this.columnMoney8 = base.Columns["Money8"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnКодДокумента = new global::System.Data.DataColumn("КодДокумента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодДокумента);
                this.columnИзменил = new global::System.Data.DataColumn("Изменил", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИзменил);
                this.columnИзменено = new global::System.Data.DataColumn("Изменено", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИзменено);
                this.columnКодЛица1 = new global::System.Data.DataColumn("КодЛица1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодЛица1);
                this.columnКодЛица2 = new global::System.Data.DataColumn("КодЛица2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодЛица2);
                this.columnКодЛица3 = new global::System.Data.DataColumn("КодЛица3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодЛица3);
                this.columnКодЛица4 = new global::System.Data.DataColumn("КодЛица4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодЛица4);
                this.columnКодСклада1 = new global::System.Data.DataColumn("КодСклада1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодСклада1);
                this.columnКодСклада2 = new global::System.Data.DataColumn("КодСклада2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодСклада2);
                this.columnКодСклада3 = new global::System.Data.DataColumn("КодСклада3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодСклада3);
                this.columnКодСклада4 = new global::System.Data.DataColumn("КодСклада4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодСклада4);
                this.columnКодРесурса1 = new global::System.Data.DataColumn("КодРесурса1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодРесурса1);
                this.columnКодРесурса2 = new global::System.Data.DataColumn("КодРесурса2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодРесурса2);
                this.columnКодСотрудника1 = new global::System.Data.DataColumn("КодСотрудника1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодСотрудника1);
                this.columnКодСотрудника2 = new global::System.Data.DataColumn("КодСотрудника2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодСотрудника2);
                this.columnКодБизнесПроекта = new global::System.Data.DataColumn("КодБизнесПроекта", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодБизнесПроекта);
                this.columnДата2 = new global::System.Data.DataColumn("Дата2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата2);
                this.columnДата3 = new global::System.Data.DataColumn("Дата3", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата3);
                this.columnДата4 = new global::System.Data.DataColumn("Дата4", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата4);
                this.columnДата5 = new global::System.Data.DataColumn("Дата5", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата5);
                this.columnFlag1 = new global::System.Data.DataColumn("Flag1", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlag1);
                this.columnFlag2 = new global::System.Data.DataColumn("Flag2", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlag2);
                this.columnFlag3 = new global::System.Data.DataColumn("Flag3", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlag3);
                this.columnFlag4 = new global::System.Data.DataColumn("Flag4", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlag4);
                this.columnFlag5 = new global::System.Data.DataColumn("Flag5", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlag5);
                this.columnInt1 = new global::System.Data.DataColumn("Int1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInt1);
                this.columnInt2 = new global::System.Data.DataColumn("Int2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInt2);
                this.columnInt3 = new global::System.Data.DataColumn("Int3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInt3);
                this.columnInt4 = new global::System.Data.DataColumn("Int4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInt4);
                this.columnInt5 = new global::System.Data.DataColumn("Int5", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInt5);
                this.columnInt6 = new global::System.Data.DataColumn("Int6", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInt6);
                this.columnInt7 = new global::System.Data.DataColumn("Int7", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInt7);
                this.columnText50_1 = new global::System.Data.DataColumn("Text50_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText50_1);
                this.columnText50_2 = new global::System.Data.DataColumn("Text50_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText50_2);
                this.columnText50_3 = new global::System.Data.DataColumn("Text50_3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText50_3);
                this.columnText50_4 = new global::System.Data.DataColumn("Text50_4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText50_4);
                this.columnText50_5 = new global::System.Data.DataColumn("Text50_5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText50_5);
                this.columnText50_6 = new global::System.Data.DataColumn("Text50_6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText50_6);
                this.columnText50_7 = new global::System.Data.DataColumn("Text50_7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText50_7);
                this.columnText50_8 = new global::System.Data.DataColumn("Text50_8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText50_8);
                this.columnText50_9 = new global::System.Data.DataColumn("Text50_9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText50_9);
                this.columnText50_10 = new global::System.Data.DataColumn("Text50_10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText50_10);
                this.columnText100_1 = new global::System.Data.DataColumn("Text100_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText100_1);
                this.columnText100_2 = new global::System.Data.DataColumn("Text100_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText100_2);
                this.columnText100_3 = new global::System.Data.DataColumn("Text100_3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText100_3);
                this.columnText100_4 = new global::System.Data.DataColumn("Text100_4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText100_4);
                this.columnText100_5 = new global::System.Data.DataColumn("Text100_5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText100_5);
                this.columnText100_6 = new global::System.Data.DataColumn("Text100_6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText100_6);
                this.columnText300_1 = new global::System.Data.DataColumn("Text300_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText300_1);
                this.columnText300_2 = new global::System.Data.DataColumn("Text300_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText300_2);
                this.columnText300_3 = new global::System.Data.DataColumn("Text300_3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText300_3);
                this.columnText300_4 = new global::System.Data.DataColumn("Text300_4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText300_4);
                this.columnText300_5 = new global::System.Data.DataColumn("Text300_5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText300_5);
                this.columnText300_6 = new global::System.Data.DataColumn("Text300_6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText300_6);
                this.columnText1000_1 = new global::System.Data.DataColumn("Text1000_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText1000_1);
                this.columnText1000_2 = new global::System.Data.DataColumn("Text1000_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnText1000_2);
                this.columnMoney1 = new global::System.Data.DataColumn("Money1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoney1);
                this.columnMoney2 = new global::System.Data.DataColumn("Money2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoney2);
                this.columnMoney3 = new global::System.Data.DataColumn("Money3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoney3);
                this.columnMoney4 = new global::System.Data.DataColumn("Money4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoney4);
                this.columnMoney5 = new global::System.Data.DataColumn("Money5", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoney5);
                this.columnMoney6 = new global::System.Data.DataColumn("Money6", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoney6);
                this.columnMoney7 = new global::System.Data.DataColumn("Money7", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoney7);
                this.columnMoney8 = new global::System.Data.DataColumn("Money8", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoney8);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("DSDocsKey5", new global::System.Data.DataColumn[] {
                                this.columnКодДокумента}, true));
                this.columnКодДокумента.AllowDBNull = false;
                this.columnКодДокумента.Unique = true;
                this.columnИзменил.AllowDBNull = false;
                this.columnИзменено.AllowDBNull = false;
                this.columnText50_1.AllowDBNull = false;
                this.columnText50_2.AllowDBNull = false;
                this.columnText50_3.AllowDBNull = false;
                this.columnText50_4.AllowDBNull = false;
                this.columnText50_5.AllowDBNull = false;
                this.columnText50_6.AllowDBNull = false;
                this.columnText50_7.AllowDBNull = false;
                this.columnText50_8.AllowDBNull = false;
                this.columnText50_9.AllowDBNull = false;
                this.columnText50_10.AllowDBNull = false;
                this.columnText100_1.AllowDBNull = false;
                this.columnText100_2.AllowDBNull = false;
                this.columnText100_3.AllowDBNull = false;
                this.columnText100_4.AllowDBNull = false;
                this.columnText100_5.AllowDBNull = false;
                this.columnText100_6.AllowDBNull = false;
                this.columnText300_1.AllowDBNull = false;
                this.columnText300_2.AllowDBNull = false;
                this.columnText300_3.AllowDBNull = false;
                this.columnText300_4.AllowDBNull = false;
                this.columnText300_5.AllowDBNull = false;
                this.columnText300_6.AllowDBNull = false;
                this.columnText1000_1.AllowDBNull = false;
                this.columnText1000_2.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ДокументыДанныеRow NewДокументыДанныеRow() {
                return ((ДокументыДанныеRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ДокументыДанныеRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ДокументыДанныеRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ДокументыДанныеRowChanged != null)) {
                    this.ДокументыДанныеRowChanged(this, new ДокументыДанныеRowChangeEvent(((ДокументыДанныеRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ДокументыДанныеRowChanging != null)) {
                    this.ДокументыДанныеRowChanging(this, new ДокументыДанныеRowChangeEvent(((ДокументыДанныеRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ДокументыДанныеRowDeleted != null)) {
                    this.ДокументыДанныеRowDeleted(this, new ДокументыДанныеRowChangeEvent(((ДокументыДанныеRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ДокументыДанныеRowDeleting != null)) {
                    this.ДокументыДанныеRowDeleting(this, new ДокументыДанныеRowChangeEvent(((ДокументыДанныеRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveДокументыДанныеRow(ДокументыДанныеRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSDocs ds = new DSDocs();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ДокументыДанныеDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class СвязиДокументовDataTable : global::System.Data.TypedTableBase<СвязиДокументовRow> {
            
            private global::System.Data.DataColumn columnКодСвязиДокументов;
            
            private global::System.Data.DataColumn columnКодДокументаОснования;
            
            private global::System.Data.DataColumn columnКодДокументаВытекающего;
            
            private global::System.Data.DataColumn columnКодПоляДокумента;
            
            private global::System.Data.DataColumn columnПорядокОснования;
            
            private global::System.Data.DataColumn columnПорядокВытекающего;
            
            private global::System.Data.DataColumn columnИзменил;
            
            private global::System.Data.DataColumn columnИзменено;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public СвязиДокументовDataTable() {
                this.TableName = "СвязиДокументов";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal СвязиДокументовDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected СвязиДокументовDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодСвязиДокументовColumn {
                get {
                    return this.columnКодСвязиДокументов;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодДокументаОснованияColumn {
                get {
                    return this.columnКодДокументаОснования;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодДокументаВытекающегоColumn {
                get {
                    return this.columnКодДокументаВытекающего;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодПоляДокументаColumn {
                get {
                    return this.columnКодПоляДокумента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ПорядокОснованияColumn {
                get {
                    return this.columnПорядокОснования;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ПорядокВытекающегоColumn {
                get {
                    return this.columnПорядокВытекающего;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ИзменилColumn {
                get {
                    return this.columnИзменил;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ИзмененоColumn {
                get {
                    return this.columnИзменено;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public СвязиДокументовRow this[int index] {
                get {
                    return ((СвязиДокументовRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event СвязиДокументовRowChangeEventHandler СвязиДокументовRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event СвязиДокументовRowChangeEventHandler СвязиДокументовRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event СвязиДокументовRowChangeEventHandler СвязиДокументовRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event СвязиДокументовRowChangeEventHandler СвязиДокументовRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddСвязиДокументовRow(СвязиДокументовRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public СвязиДокументовRow AddСвязиДокументовRow(int КодДокументаОснования, ДокументыRow parentДокументыRowByДокументыСвязиДокументов, int КодПоляДокумента, int ПорядокОснования, int ПорядокВытекающего, int Изменил, System.DateTime Изменено) {
                СвязиДокументовRow rowСвязиДокументовRow = ((СвязиДокументовRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        КодДокументаОснования,
                        null,
                        КодПоляДокумента,
                        ПорядокОснования,
                        ПорядокВытекающего,
                        Изменил,
                        Изменено};
                if ((parentДокументыRowByДокументыСвязиДокументов != null)) {
                    columnValuesArray[2] = parentДокументыRowByДокументыСвязиДокументов[0];
                }
                rowСвязиДокументовRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowСвязиДокументовRow);
                return rowСвязиДокументовRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public СвязиДокументовRow FindByКодСвязиДокументов(int КодСвязиДокументов) {
                return ((СвязиДокументовRow)(this.Rows.Find(new object[] {
                            КодСвязиДокументов})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                СвязиДокументовDataTable cln = ((СвязиДокументовDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new СвязиДокументовDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnКодСвязиДокументов = base.Columns["КодСвязиДокументов"];
                this.columnКодДокументаОснования = base.Columns["КодДокументаОснования"];
                this.columnКодДокументаВытекающего = base.Columns["КодДокументаВытекающего"];
                this.columnКодПоляДокумента = base.Columns["КодПоляДокумента"];
                this.columnПорядокОснования = base.Columns["ПорядокОснования"];
                this.columnПорядокВытекающего = base.Columns["ПорядокВытекающего"];
                this.columnИзменил = base.Columns["Изменил"];
                this.columnИзменено = base.Columns["Изменено"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnКодСвязиДокументов = new global::System.Data.DataColumn("КодСвязиДокументов", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодСвязиДокументов);
                this.columnКодДокументаОснования = new global::System.Data.DataColumn("КодДокументаОснования", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодДокументаОснования);
                this.columnКодДокументаВытекающего = new global::System.Data.DataColumn("КодДокументаВытекающего", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодДокументаВытекающего);
                this.columnКодПоляДокумента = new global::System.Data.DataColumn("КодПоляДокумента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодПоляДокумента);
                this.columnПорядокОснования = new global::System.Data.DataColumn("ПорядокОснования", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПорядокОснования);
                this.columnПорядокВытекающего = new global::System.Data.DataColumn("ПорядокВытекающего", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПорядокВытекающего);
                this.columnИзменил = new global::System.Data.DataColumn("Изменил", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИзменил);
                this.columnИзменено = new global::System.Data.DataColumn("Изменено", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИзменено);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("DSDocsKey7", new global::System.Data.DataColumn[] {
                                this.columnКодСвязиДокументов}, true));
                this.columnКодСвязиДокументов.AutoIncrement = true;
                this.columnКодСвязиДокументов.AutoIncrementSeed = -1;
                this.columnКодСвязиДокументов.AutoIncrementStep = -1;
                this.columnКодСвязиДокументов.AllowDBNull = false;
                this.columnКодСвязиДокументов.ReadOnly = true;
                this.columnКодСвязиДокументов.Unique = true;
                this.columnКодДокументаОснования.AllowDBNull = false;
                this.columnКодДокументаВытекающего.AllowDBNull = false;
                this.columnПорядокОснования.AllowDBNull = false;
                this.columnПорядокВытекающего.AllowDBNull = false;
                this.columnИзменил.AllowDBNull = false;
                this.columnИзменено.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public СвязиДокументовRow NewСвязиДокументовRow() {
                return ((СвязиДокументовRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new СвязиДокументовRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(СвязиДокументовRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.СвязиДокументовRowChanged != null)) {
                    this.СвязиДокументовRowChanged(this, new СвязиДокументовRowChangeEvent(((СвязиДокументовRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.СвязиДокументовRowChanging != null)) {
                    this.СвязиДокументовRowChanging(this, new СвязиДокументовRowChangeEvent(((СвязиДокументовRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.СвязиДокументовRowDeleted != null)) {
                    this.СвязиДокументовRowDeleted(this, new СвязиДокументовRowChangeEvent(((СвязиДокументовRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.СвязиДокументовRowDeleting != null)) {
                    this.СвязиДокументовRowDeleting(this, new СвязиДокументовRowChangeEvent(((СвязиДокументовRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveСвязиДокументовRow(СвязиДокументовRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSDocs ds = new DSDocs();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "СвязиДокументовDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ЛицаДокументовDataTable : global::System.Data.TypedTableBase<ЛицаДокументовRow> {
            
            private global::System.Data.DataColumn columnКодЛицаДокумента;
            
            private global::System.Data.DataColumn columnКодДокумента;
            
            private global::System.Data.DataColumn columnКодЛица;
            
            private global::System.Data.DataColumn columnПоложение;
            
            private global::System.Data.DataColumn columnИзменил;
            
            private global::System.Data.DataColumn columnИзменено;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ЛицаДокументовDataTable() {
                this.TableName = "ЛицаДокументов";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ЛицаДокументовDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ЛицаДокументовDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодЛицаДокументаColumn {
                get {
                    return this.columnКодЛицаДокумента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодДокументаColumn {
                get {
                    return this.columnКодДокумента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодЛицаColumn {
                get {
                    return this.columnКодЛица;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ПоложениеColumn {
                get {
                    return this.columnПоложение;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ИзменилColumn {
                get {
                    return this.columnИзменил;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ИзмененоColumn {
                get {
                    return this.columnИзменено;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ЛицаДокументовRow this[int index] {
                get {
                    return ((ЛицаДокументовRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ЛицаДокументовRowChangeEventHandler ЛицаДокументовRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ЛицаДокументовRowChangeEventHandler ЛицаДокументовRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ЛицаДокументовRowChangeEventHandler ЛицаДокументовRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ЛицаДокументовRowChangeEventHandler ЛицаДокументовRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddЛицаДокументовRow(ЛицаДокументовRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ЛицаДокументовRow AddЛицаДокументовRow(ДокументыRow parentДокументыRowByДокументыЛицаДокументов, int КодЛица, byte Положение, int Изменил, System.DateTime Изменено) {
                ЛицаДокументовRow rowЛицаДокументовRow = ((ЛицаДокументовRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        КодЛица,
                        Положение,
                        Изменил,
                        Изменено};
                if ((parentДокументыRowByДокументыЛицаДокументов != null)) {
                    columnValuesArray[1] = parentДокументыRowByДокументыЛицаДокументов[0];
                }
                rowЛицаДокументовRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowЛицаДокументовRow);
                return rowЛицаДокументовRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ЛицаДокументовRow FindByКодЛицаДокумента(int КодЛицаДокумента) {
                return ((ЛицаДокументовRow)(this.Rows.Find(new object[] {
                            КодЛицаДокумента})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ЛицаДокументовDataTable cln = ((ЛицаДокументовDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ЛицаДокументовDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnКодЛицаДокумента = base.Columns["КодЛицаДокумента"];
                this.columnКодДокумента = base.Columns["КодДокумента"];
                this.columnКодЛица = base.Columns["КодЛица"];
                this.columnПоложение = base.Columns["Положение"];
                this.columnИзменил = base.Columns["Изменил"];
                this.columnИзменено = base.Columns["Изменено"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnКодЛицаДокумента = new global::System.Data.DataColumn("КодЛицаДокумента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодЛицаДокумента);
                this.columnКодДокумента = new global::System.Data.DataColumn("КодДокумента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодДокумента);
                this.columnКодЛица = new global::System.Data.DataColumn("КодЛица", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодЛица);
                this.columnПоложение = new global::System.Data.DataColumn("Положение", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПоложение);
                this.columnИзменил = new global::System.Data.DataColumn("Изменил", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИзменил);
                this.columnИзменено = new global::System.Data.DataColumn("Изменено", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnИзменено);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("DSDocsKey6", new global::System.Data.DataColumn[] {
                                this.columnКодЛицаДокумента}, true));
                this.columnКодЛицаДокумента.AutoIncrement = true;
                this.columnКодЛицаДокумента.AutoIncrementSeed = -1;
                this.columnКодЛицаДокумента.AutoIncrementStep = -1;
                this.columnКодЛицаДокумента.AllowDBNull = false;
                this.columnКодЛицаДокумента.ReadOnly = true;
                this.columnКодЛицаДокумента.Unique = true;
                this.columnКодДокумента.AllowDBNull = false;
                this.columnКодЛица.AllowDBNull = false;
                this.columnПоложение.AllowDBNull = false;
                this.columnИзменил.AllowDBNull = false;
                this.columnИзменено.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ЛицаДокументовRow NewЛицаДокументовRow() {
                return ((ЛицаДокументовRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ЛицаДокументовRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ЛицаДокументовRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ЛицаДокументовRowChanged != null)) {
                    this.ЛицаДокументовRowChanged(this, new ЛицаДокументовRowChangeEvent(((ЛицаДокументовRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ЛицаДокументовRowChanging != null)) {
                    this.ЛицаДокументовRowChanging(this, new ЛицаДокументовRowChangeEvent(((ЛицаДокументовRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ЛицаДокументовRowDeleted != null)) {
                    this.ЛицаДокументовRowDeleted(this, new ЛицаДокументовRowChangeEvent(((ЛицаДокументовRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ЛицаДокументовRowDeleting != null)) {
                    this.ЛицаДокументовRowDeleting(this, new ЛицаДокументовRowChangeEvent(((ЛицаДокументовRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveЛицаДокументовRow(ЛицаДокументовRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSDocs ds = new DSDocs();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ЛицаДокументовDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ПодписиДокументовDataTable : global::System.Data.TypedTableBase<ПодписиДокументовRow> {
            
            private global::System.Data.DataColumn columnКодПодписиДокумента;
            
            private global::System.Data.DataColumn columnКодДокумента;
            
            private global::System.Data.DataColumn columnКодСотрудника;
            
            private global::System.Data.DataColumn columnКодСотрудникаЗА;
            
            private global::System.Data.DataColumn columnДата;
            
            private global::System.Data.DataColumn columnТипПодписи;
            
            private global::System.Data.DataColumn columnКомментарий;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ПодписиДокументовDataTable() {
                this.TableName = "ПодписиДокументов";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ПодписиДокументовDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ПодписиДокументовDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодПодписиДокументаColumn {
                get {
                    return this.columnКодПодписиДокумента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодДокументаColumn {
                get {
                    return this.columnКодДокумента;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодСотрудникаColumn {
                get {
                    return this.columnКодСотрудника;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КодСотрудникаЗАColumn {
                get {
                    return this.columnКодСотрудникаЗА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ДатаColumn {
                get {
                    return this.columnДата;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ТипПодписиColumn {
                get {
                    return this.columnТипПодписи;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn КомментарийColumn {
                get {
                    return this.columnКомментарий;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ПодписиДокументовRow this[int index] {
                get {
                    return ((ПодписиДокументовRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ПодписиДокументовRowChangeEventHandler ПодписиДокументовRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ПодписиДокументовRowChangeEventHandler ПодписиДокументовRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ПодписиДокументовRowChangeEventHandler ПодписиДокументовRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ПодписиДокументовRowChangeEventHandler ПодписиДокументовRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddПодписиДокументовRow(ПодписиДокументовRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ПодписиДокументовRow AddПодписиДокументовRow(ДокументыRow parentДокументыRowByДокументыПодписиДокументов, int КодСотрудника, int КодСотрудникаЗА, System.DateTime Дата, byte ТипПодписи, string Комментарий) {
                ПодписиДокументовRow rowПодписиДокументовRow = ((ПодписиДокументовRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        КодСотрудника,
                        КодСотрудникаЗА,
                        Дата,
                        ТипПодписи,
                        Комментарий};
                if ((parentДокументыRowByДокументыПодписиДокументов != null)) {
                    columnValuesArray[1] = parentДокументыRowByДокументыПодписиДокументов[0];
                }
                rowПодписиДокументовRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowПодписиДокументовRow);
                return rowПодписиДокументовRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ПодписиДокументовRow FindByКодПодписиДокумента(int КодПодписиДокумента) {
                return ((ПодписиДокументовRow)(this.Rows.Find(new object[] {
                            КодПодписиДокумента})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ПодписиДокументовDataTable cln = ((ПодписиДокументовDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ПодписиДокументовDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnКодПодписиДокумента = base.Columns["КодПодписиДокумента"];
                this.columnКодДокумента = base.Columns["КодДокумента"];
                this.columnКодСотрудника = base.Columns["КодСотрудника"];
                this.columnКодСотрудникаЗА = base.Columns["КодСотрудникаЗА"];
                this.columnДата = base.Columns["Дата"];
                this.columnТипПодписи = base.Columns["ТипПодписи"];
                this.columnКомментарий = base.Columns["Комментарий"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnКодПодписиДокумента = new global::System.Data.DataColumn("КодПодписиДокумента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодПодписиДокумента);
                this.columnКодДокумента = new global::System.Data.DataColumn("КодДокумента", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодДокумента);
                this.columnКодСотрудника = new global::System.Data.DataColumn("КодСотрудника", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодСотрудника);
                this.columnКодСотрудникаЗА = new global::System.Data.DataColumn("КодСотрудникаЗА", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКодСотрудникаЗА);
                this.columnДата = new global::System.Data.DataColumn("Дата", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДата);
                this.columnТипПодписи = new global::System.Data.DataColumn("ТипПодписи", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnТипПодписи);
                this.columnКомментарий = new global::System.Data.DataColumn("Комментарий", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКомментарий);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("DSDocsKey8", new global::System.Data.DataColumn[] {
                                this.columnКодПодписиДокумента}, true));
                this.columnКодПодписиДокумента.AutoIncrement = true;
                this.columnКодПодписиДокумента.AutoIncrementSeed = -1;
                this.columnКодПодписиДокумента.AutoIncrementStep = -1;
                this.columnКодПодписиДокумента.AllowDBNull = false;
                this.columnКодПодписиДокумента.ReadOnly = true;
                this.columnКодПодписиДокумента.Unique = true;
                this.columnКодДокумента.AllowDBNull = false;
                this.columnКодСотрудника.AllowDBNull = false;
                this.columnДата.AllowDBNull = false;
                this.columnТипПодписи.AllowDBNull = false;
                this.columnКомментарий.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ПодписиДокументовRow NewПодписиДокументовRow() {
                return ((ПодписиДокументовRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ПодписиДокументовRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ПодписиДокументовRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ПодписиДокументовRowChanged != null)) {
                    this.ПодписиДокументовRowChanged(this, new ПодписиДокументовRowChangeEvent(((ПодписиДокументовRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ПодписиДокументовRowChanging != null)) {
                    this.ПодписиДокументовRowChanging(this, new ПодписиДокументовRowChangeEvent(((ПодписиДокументовRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ПодписиДокументовRowDeleted != null)) {
                    this.ПодписиДокументовRowDeleted(this, new ПодписиДокументовRowChangeEvent(((ПодписиДокументовRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ПодписиДокументовRowDeleting != null)) {
                    this.ПодписиДокументовRowDeleting(this, new ПодписиДокументовRowChangeEvent(((ПодписиДокументовRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveПодписиДокументовRow(ПодписиДокументовRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DSDocs ds = new DSDocs();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ПодписиДокументовDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ТипыДокументовRow : global::System.Data.DataRow {
            
            private ТипыДокументовDataTable tableТипыДокументов;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ТипыДокументовRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableТипыДокументов = ((ТипыДокументовDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодТипаДокумента {
                get {
                    return ((int)(this[this.tableТипыДокументов.КодТипаДокументаColumn]));
                }
                set {
                    this[this.tableТипыДокументов.КодТипаДокументаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ТипДокумента {
                get {
                    try {
                        return ((string)(this[this.tableТипыДокументов.ТипДокументаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ТипДокумента\' в таблице \'ТипыДокументов\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableТипыДокументов.ТипДокументаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ИмяПредставления {
                get {
                    return ((string)(this[this.tableТипыДокументов.ИмяПредставленияColumn]));
                }
                set {
                    this[this.tableТипыДокументов.ИмяПредставленияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte НаличиеФормы {
                get {
                    return ((byte)(this[this.tableТипыДокументов.НаличиеФормыColumn]));
                }
                set {
                    this[this.tableТипыДокументов.НаличиеФормыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string URL {
                get {
                    return ((string)(this[this.tableТипыДокументов.URLColumn]));
                }
                set {
                    this[this.tableТипыДокументов.URLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SearchURL {
                get {
                    return ((string)(this[this.tableТипыДокументов.SearchURLColumn]));
                }
                set {
                    this[this.tableТипыДокументов.SearchURLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Исходящий {
                get {
                    return ((bool)(this[this.tableТипыДокументов.ИсходящийColumn]));
                }
                set {
                    this[this.tableТипыДокументов.ИсходящийColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ТипАвтогенерацииНомера {
                get {
                    return ((int)(this[this.tableТипыДокументов.ТипАвтогенерацииНомераColumn]));
                }
                set {
                    this[this.tableТипыДокументов.ТипАвтогенерацииНомераColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int АлгоритмАвтогенерацииНомера {
                get {
                    return ((int)(this[this.tableТипыДокументов.АлгоритмАвтогенерацииНомераColumn]));
                }
                set {
                    this[this.tableТипыДокументов.АлгоритмАвтогенерацииНомераColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Changed {
                get {
                    return ((bool)(this[this.tableТипыДокументов.ChangedColumn]));
                }
                set {
                    this[this.tableТипыДокументов.ChangedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Parent {
                get {
                    try {
                        return ((int)(this[this.tableТипыДокументов.ParentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Parent\' в таблице \'ТипыДокументов\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableТипыДокументов.ParentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int L {
                get {
                    return ((int)(this[this.tableТипыДокументов.LColumn]));
                }
                set {
                    this[this.tableТипыДокументов.LColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int R {
                get {
                    return ((int)(this[this.tableТипыДокументов.RColumn]));
                }
                set {
                    this[this.tableТипыДокументов.RColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Изменил {
                get {
                    return ((int)(this[this.tableТипыДокументов.ИзменилColumn]));
                }
                set {
                    this[this.tableТипыДокументов.ИзменилColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Изменено {
                get {
                    return ((global::System.DateTime)(this[this.tableТипыДокументов.ИзмененоColumn]));
                }
                set {
                    this[this.tableТипыДокументов.ИзмененоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsТипДокументаNull() {
                return this.IsNull(this.tableТипыДокументов.ТипДокументаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetТипДокументаNull() {
                this[this.tableТипыДокументов.ТипДокументаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsParentNull() {
                return this.IsNull(this.tableТипыДокументов.ParentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetParentNull() {
                this[this.tableТипыДокументов.ParentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ПоляДокументовRow : global::System.Data.DataRow {
            
            private ПоляДокументовDataTable tableПоляДокументов;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ПоляДокументовRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableПоляДокументов = ((ПоляДокументовDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодПоляДокумента {
                get {
                    return ((int)(this[this.tableПоляДокументов.КодПоляДокументаColumn]));
                }
                set {
                    this[this.tableПоляДокументов.КодПоляДокументаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодТипаДокумента {
                get {
                    return ((int)(this[this.tableПоляДокументов.КодТипаДокументаColumn]));
                }
                set {
                    this[this.tableПоляДокументов.КодТипаДокументаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ПорядокПоляДокумента {
                get {
                    return ((int)(this[this.tableПоляДокументов.ПорядокПоляДокументаColumn]));
                }
                set {
                    this[this.tableПоляДокументов.ПорядокПоляДокументаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ПолеДокумента {
                get {
                    return ((string)(this[this.tableПоляДокументов.ПолеДокументаColumn]));
                }
                set {
                    this[this.tableПоляДокументов.ПолеДокументаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string КолонкаТаблицы {
                get {
                    return ((string)(this[this.tableПоляДокументов.КолонкаТаблицыColumn]));
                }
                set {
                    this[this.tableПоляДокументов.КолонкаТаблицыColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Обязательность {
                get {
                    return ((bool)(this[this.tableПоляДокументов.ОбязательностьColumn]));
                }
                set {
                    this[this.tableПоляДокументов.ОбязательностьColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодТипаПоля {
                get {
                    return ((int)(this[this.tableПоляДокументов.КодТипаПоляColumn]));
                }
                set {
                    this[this.tableПоляДокументов.КодТипаПоляColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ЧислоДесятичныхЗнаков {
                get {
                    return ((int)(this[this.tableПоляДокументов.ЧислоДесятичныхЗнаковColumn]));
                }
                set {
                    this[this.tableПоляДокументов.ЧислоДесятичныхЗнаковColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string URLПоиска {
                get {
                    return ((string)(this[this.tableПоляДокументов.URLПоискаColumn]));
                }
                set {
                    this[this.tableПоляДокументов.URLПоискаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ПараметрыПоиска {
                get {
                    return ((string)(this[this.tableПоляДокументов.ПараметрыПоискаColumn]));
                }
                set {
                    this[this.tableПоляДокументов.ПараметрыПоискаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ЗаголовокФормыПоиска {
                get {
                    return ((string)(this[this.tableПоляДокументов.ЗаголовокФормыПоискаColumn]));
                }
                set {
                    this[this.tableПоляДокументов.ЗаголовокФормыПоискаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string СтрокаПодключения {
                get {
                    return ((string)(this[this.tableПоляДокументов.СтрокаПодключенияColumn]));
                }
                set {
                    this[this.tableПоляДокументов.СтрокаПодключенияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SQLЗапрос {
                get {
                    return ((string)(this[this.tableПоляДокументов.SQLЗапросColumn]));
                }
                set {
                    this[this.tableПоляДокументов.SQLЗапросColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Изменил {
                get {
                    return ((int)(this[this.tableПоляДокументов.ИзменилColumn]));
                }
                set {
                    this[this.tableПоляДокументов.ИзменилColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Изменено {
                get {
                    return ((global::System.DateTime)(this[this.tableПоляДокументов.ИзмененоColumn]));
                }
                set {
                    this[this.tableПоляДокументов.ИзмененоColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ТипыПолейRow : global::System.Data.DataRow {
            
            private ТипыПолейDataTable tableТипыПолей;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ТипыПолейRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableТипыПолей = ((ТипыПолейDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодТипаПоля {
                get {
                    return ((int)(this[this.tableТипыПолей.КодТипаПоляColumn]));
                }
                set {
                    this[this.tableТипыПолей.КодТипаПоляColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ТипПоля {
                get {
                    return ((string)(this[this.tableТипыПолей.ТипПоляColumn]));
                }
                set {
                    this[this.tableТипыПолей.ТипПоляColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ТипыДанных {
                get {
                    return ((string)(this[this.tableТипыПолей.ТипыДанныхColumn]));
                }
                set {
                    this[this.tableТипыПолей.ТипыДанныхColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ИмяПоля {
                get {
                    return ((string)(this[this.tableТипыПолей.ИмяПоляColumn]));
                }
                set {
                    this[this.tableТипыПолей.ИмяПоляColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool НужноЧислоДесятичныхЗнаков {
                get {
                    return ((bool)(this[this.tableТипыПолей.НужноЧислоДесятичныхЗнаковColumn]));
                }
                set {
                    this[this.tableТипыПолей.НужноЧислоДесятичныхЗнаковColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool НуженURLПоиска {
                get {
                    return ((bool)(this[this.tableТипыПолей.НуженURLПоискаColumn]));
                }
                set {
                    this[this.tableТипыПолей.НуженURLПоискаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool НуженЗаголовокФормыПоиска {
                get {
                    return ((bool)(this[this.tableТипыПолей.НуженЗаголовокФормыПоискаColumn]));
                }
                set {
                    this[this.tableТипыПолей.НуженЗаголовокФормыПоискаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool НуженSQLЗапрос {
                get {
                    return ((bool)(this[this.tableТипыПолей.НуженSQLЗапросColumn]));
                }
                set {
                    this[this.tableТипыПолей.НуженSQLЗапросColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Сервис {
                get {
                    return ((string)(this[this.tableТипыПолей.СервисColumn]));
                }
                set {
                    this[this.tableТипыПолей.СервисColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Сущность {
                get {
                    return ((string)(this[this.tableТипыПолей.СущностьColumn]));
                }
                set {
                    this[this.tableТипыПолей.СущностьColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ДокументыRow : global::System.Data.DataRow {
            
            private ДокументыDataTable tableДокументы;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ДокументыRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableДокументы = ((ДокументыDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодДокумента {
                get {
                    return ((int)(this[this.tableДокументы.КодДокументаColumn]));
                }
                set {
                    this[this.tableДокументы.КодДокументаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодТипаДокумента {
                get {
                    return ((int)(this[this.tableДокументы.КодТипаДокументаColumn]));
                }
                set {
                    this[this.tableДокументы.КодТипаДокументаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string НомерДокумента {
                get {
                    return ((string)(this[this.tableДокументы.НомерДокументаColumn]));
                }
                set {
                    this[this.tableДокументы.НомерДокументаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ДатаДокумента {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableДокументы.ДатаДокументаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ДатаДокумента\' в таблице \'Документы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументы.ДатаДокументаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Описание {
                get {
                    return ((string)(this[this.tableДокументы.ОписаниеColumn]));
                }
                set {
                    this[this.tableДокументы.ОписаниеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодИзображенияДокументаОсновного {
                get {
                    try {
                        return ((int)(this[this.tableДокументы.КодИзображенияДокументаОсновногоColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КодИзображенияДокументаОсновного\' в таблице \'Документы\' рав" +
                                "но DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументы.КодИзображенияДокументаОсновногоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int НомерInt {
                get {
                    try {
                        return ((int)(this[this.tableДокументы.НомерIntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НомерInt\' в таблице \'Документы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументы.НомерIntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string НомерДокументаRL {
                get {
                    try {
                        return ((string)(this[this.tableДокументы.НомерДокументаRLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НомерДокументаRL\' в таблице \'Документы\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументы.НомерДокументаRLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Изменил {
                get {
                    return ((int)(this[this.tableДокументы.ИзменилColumn]));
                }
                set {
                    this[this.tableДокументы.ИзменилColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Изменено {
                get {
                    return ((global::System.DateTime)(this[this.tableДокументы.ИзмененоColumn]));
                }
                set {
                    this[this.tableДокументы.ИзмененоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsДатаДокументаNull() {
                return this.IsNull(this.tableДокументы.ДатаДокументаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetДатаДокументаNull() {
                this[this.tableДокументы.ДатаДокументаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsКодИзображенияДокументаОсновногоNull() {
                return this.IsNull(this.tableДокументы.КодИзображенияДокументаОсновногоColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetКодИзображенияДокументаОсновногоNull() {
                this[this.tableДокументы.КодИзображенияДокументаОсновногоColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsНомерIntNull() {
                return this.IsNull(this.tableДокументы.НомерIntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetНомерIntNull() {
                this[this.tableДокументы.НомерIntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsНомерДокументаRLNull() {
                return this.IsNull(this.tableДокументы.НомерДокументаRLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetНомерДокументаRLNull() {
                this[this.tableДокументы.НомерДокументаRLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public СвязиДокументовRow[] GetСвязиДокументовRows() {
                if ((this.Table.ChildRelations["ДокументыСвязиДокументов"] == null)) {
                    return new СвязиДокументовRow[0];
                }
                else {
                    return ((СвязиДокументовRow[])(base.GetChildRows(this.Table.ChildRelations["ДокументыСвязиДокументов"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ЛицаДокументовRow[] GetЛицаДокументовRows() {
                if ((this.Table.ChildRelations["ДокументыЛицаДокументов"] == null)) {
                    return new ЛицаДокументовRow[0];
                }
                else {
                    return ((ЛицаДокументовRow[])(base.GetChildRows(this.Table.ChildRelations["ДокументыЛицаДокументов"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ДокументыДанныеRow[] GetДокументыДанныеRows() {
                if ((this.Table.ChildRelations["ДокументыДокументыДанные"] == null)) {
                    return new ДокументыДанныеRow[0];
                }
                else {
                    return ((ДокументыДанныеRow[])(base.GetChildRows(this.Table.ChildRelations["ДокументыДокументыДанные"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ПодписиДокументовRow[] GetПодписиДокументовRows() {
                if ((this.Table.ChildRelations["ДокументыПодписиДокументов"] == null)) {
                    return new ПодписиДокументовRow[0];
                }
                else {
                    return ((ПодписиДокументовRow[])(base.GetChildRows(this.Table.ChildRelations["ДокументыПодписиДокументов"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ДокументыДанныеRow : global::System.Data.DataRow {
            
            private ДокументыДанныеDataTable tableДокументыДанные;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ДокументыДанныеRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableДокументыДанные = ((ДокументыДанныеDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодДокумента {
                get {
                    return ((int)(this[this.tableДокументыДанные.КодДокументаColumn]));
                }
                set {
                    this[this.tableДокументыДанные.КодДокументаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Изменил {
                get {
                    return ((int)(this[this.tableДокументыДанные.ИзменилColumn]));
                }
                set {
                    this[this.tableДокументыДанные.ИзменилColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Изменено {
                get {
                    return ((global::System.DateTime)(this[this.tableДокументыДанные.ИзмененоColumn]));
                }
                set {
                    this[this.tableДокументыДанные.ИзмененоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодЛица1 {
                get {
                    try {
                        return ((int)(this[this.tableДокументыДанные.КодЛица1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КодЛица1\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.КодЛица1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодЛица2 {
                get {
                    try {
                        return ((int)(this[this.tableДокументыДанные.КодЛица2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КодЛица2\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.КодЛица2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодЛица3 {
                get {
                    try {
                        return ((int)(this[this.tableДокументыДанные.КодЛица3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КодЛица3\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.КодЛица3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодЛица4 {
                get {
                    try {
                        return ((int)(this[this.tableДокументыДанные.КодЛица4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КодЛица4\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.КодЛица4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодСклада1 {
                get {
                    try {
                        return ((int)(this[this.tableДокументыДанные.КодСклада1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КодСклада1\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.КодСклада1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодСклада2 {
                get {
                    try {
                        return ((int)(this[this.tableДокументыДанные.КодСклада2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КодСклада2\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.КодСклада2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодСклада3 {
                get {
                    try {
                        return ((int)(this[this.tableДокументыДанные.КодСклада3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КодСклада3\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.КодСклада3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодСклада4 {
                get {
                    try {
                        return ((int)(this[this.tableДокументыДанные.КодСклада4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КодСклада4\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.КодСклада4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодРесурса1 {
                get {
                    try {
                        return ((int)(this[this.tableДокументыДанные.КодРесурса1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КодРесурса1\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.КодРесурса1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодРесурса2 {
                get {
                    try {
                        return ((int)(this[this.tableДокументыДанные.КодРесурса2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КодРесурса2\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.КодРесурса2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодСотрудника1 {
                get {
                    try {
                        return ((int)(this[this.tableДокументыДанные.КодСотрудника1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КодСотрудника1\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.КодСотрудника1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодСотрудника2 {
                get {
                    try {
                        return ((int)(this[this.tableДокументыДанные.КодСотрудника2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КодСотрудника2\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.КодСотрудника2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодБизнесПроекта {
                get {
                    try {
                        return ((int)(this[this.tableДокументыДанные.КодБизнесПроектаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КодБизнесПроекта\' в таблице \'ДокументыДанные\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.КодБизнесПроектаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Дата2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableДокументыДанные.Дата2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Дата2\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.Дата2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Дата3 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableДокументыДанные.Дата3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Дата3\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.Дата3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Дата4 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableДокументыДанные.Дата4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Дата4\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.Дата4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Дата5 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableДокументыДанные.Дата5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Дата5\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.Дата5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Flag1 {
                get {
                    try {
                        return ((byte)(this[this.tableДокументыДанные.Flag1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Flag1\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.Flag1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Flag2 {
                get {
                    try {
                        return ((byte)(this[this.tableДокументыДанные.Flag2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Flag2\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.Flag2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Flag3 {
                get {
                    try {
                        return ((byte)(this[this.tableДокументыДанные.Flag3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Flag3\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.Flag3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Flag4 {
                get {
                    try {
                        return ((byte)(this[this.tableДокументыДанные.Flag4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Flag4\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.Flag4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Flag5 {
                get {
                    try {
                        return ((byte)(this[this.tableДокументыДанные.Flag5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Flag5\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.Flag5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int1 {
                get {
                    try {
                        return ((int)(this[this.tableДокументыДанные.Int1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Int1\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.Int1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int2 {
                get {
                    try {
                        return ((int)(this[this.tableДокументыДанные.Int2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Int2\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.Int2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int3 {
                get {
                    try {
                        return ((int)(this[this.tableДокументыДанные.Int3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Int3\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.Int3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int4 {
                get {
                    try {
                        return ((int)(this[this.tableДокументыДанные.Int4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Int4\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.Int4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int5 {
                get {
                    try {
                        return ((int)(this[this.tableДокументыДанные.Int5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Int5\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.Int5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int6 {
                get {
                    try {
                        return ((int)(this[this.tableДокументыДанные.Int6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Int6\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.Int6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Int7 {
                get {
                    try {
                        return ((int)(this[this.tableДокументыДанные.Int7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Int7\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.Int7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text50_1 {
                get {
                    return ((string)(this[this.tableДокументыДанные.Text50_1Column]));
                }
                set {
                    this[this.tableДокументыДанные.Text50_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text50_2 {
                get {
                    return ((string)(this[this.tableДокументыДанные.Text50_2Column]));
                }
                set {
                    this[this.tableДокументыДанные.Text50_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text50_3 {
                get {
                    return ((string)(this[this.tableДокументыДанные.Text50_3Column]));
                }
                set {
                    this[this.tableДокументыДанные.Text50_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text50_4 {
                get {
                    return ((string)(this[this.tableДокументыДанные.Text50_4Column]));
                }
                set {
                    this[this.tableДокументыДанные.Text50_4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text50_5 {
                get {
                    return ((string)(this[this.tableДокументыДанные.Text50_5Column]));
                }
                set {
                    this[this.tableДокументыДанные.Text50_5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text50_6 {
                get {
                    return ((string)(this[this.tableДокументыДанные.Text50_6Column]));
                }
                set {
                    this[this.tableДокументыДанные.Text50_6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text50_7 {
                get {
                    return ((string)(this[this.tableДокументыДанные.Text50_7Column]));
                }
                set {
                    this[this.tableДокументыДанные.Text50_7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text50_8 {
                get {
                    return ((string)(this[this.tableДокументыДанные.Text50_8Column]));
                }
                set {
                    this[this.tableДокументыДанные.Text50_8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text50_9 {
                get {
                    return ((string)(this[this.tableДокументыДанные.Text50_9Column]));
                }
                set {
                    this[this.tableДокументыДанные.Text50_9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text50_10 {
                get {
                    return ((string)(this[this.tableДокументыДанные.Text50_10Column]));
                }
                set {
                    this[this.tableДокументыДанные.Text50_10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text100_1 {
                get {
                    return ((string)(this[this.tableДокументыДанные.Text100_1Column]));
                }
                set {
                    this[this.tableДокументыДанные.Text100_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text100_2 {
                get {
                    return ((string)(this[this.tableДокументыДанные.Text100_2Column]));
                }
                set {
                    this[this.tableДокументыДанные.Text100_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text100_3 {
                get {
                    return ((string)(this[this.tableДокументыДанные.Text100_3Column]));
                }
                set {
                    this[this.tableДокументыДанные.Text100_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text100_4 {
                get {
                    return ((string)(this[this.tableДокументыДанные.Text100_4Column]));
                }
                set {
                    this[this.tableДокументыДанные.Text100_4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text100_5 {
                get {
                    return ((string)(this[this.tableДокументыДанные.Text100_5Column]));
                }
                set {
                    this[this.tableДокументыДанные.Text100_5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text100_6 {
                get {
                    return ((string)(this[this.tableДокументыДанные.Text100_6Column]));
                }
                set {
                    this[this.tableДокументыДанные.Text100_6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text300_1 {
                get {
                    return ((string)(this[this.tableДокументыДанные.Text300_1Column]));
                }
                set {
                    this[this.tableДокументыДанные.Text300_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text300_2 {
                get {
                    return ((string)(this[this.tableДокументыДанные.Text300_2Column]));
                }
                set {
                    this[this.tableДокументыДанные.Text300_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text300_3 {
                get {
                    return ((string)(this[this.tableДокументыДанные.Text300_3Column]));
                }
                set {
                    this[this.tableДокументыДанные.Text300_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text300_4 {
                get {
                    return ((string)(this[this.tableДокументыДанные.Text300_4Column]));
                }
                set {
                    this[this.tableДокументыДанные.Text300_4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text300_5 {
                get {
                    return ((string)(this[this.tableДокументыДанные.Text300_5Column]));
                }
                set {
                    this[this.tableДокументыДанные.Text300_5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text300_6 {
                get {
                    return ((string)(this[this.tableДокументыДанные.Text300_6Column]));
                }
                set {
                    this[this.tableДокументыДанные.Text300_6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text1000_1 {
                get {
                    return ((string)(this[this.tableДокументыДанные.Text1000_1Column]));
                }
                set {
                    this[this.tableДокументыДанные.Text1000_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Text1000_2 {
                get {
                    return ((string)(this[this.tableДокументыДанные.Text1000_2Column]));
                }
                set {
                    this[this.tableДокументыДанные.Text1000_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Money1 {
                get {
                    try {
                        return ((decimal)(this[this.tableДокументыДанные.Money1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Money1\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.Money1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Money2 {
                get {
                    try {
                        return ((decimal)(this[this.tableДокументыДанные.Money2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Money2\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.Money2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Money3 {
                get {
                    try {
                        return ((decimal)(this[this.tableДокументыДанные.Money3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Money3\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.Money3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Money4 {
                get {
                    try {
                        return ((decimal)(this[this.tableДокументыДанные.Money4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Money4\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.Money4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Money5 {
                get {
                    try {
                        return ((decimal)(this[this.tableДокументыДанные.Money5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Money5\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.Money5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Money6 {
                get {
                    try {
                        return ((decimal)(this[this.tableДокументыДанные.Money6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Money6\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.Money6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Money7 {
                get {
                    try {
                        return ((decimal)(this[this.tableДокументыДанные.Money7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Money7\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.Money7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Money8 {
                get {
                    try {
                        return ((decimal)(this[this.tableДокументыДанные.Money8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'Money8\' в таблице \'ДокументыДанные\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДокументыДанные.Money8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ДокументыRow ДокументыRow {
                get {
                    return ((ДокументыRow)(this.GetParentRow(this.Table.ParentRelations["ДокументыДокументыДанные"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ДокументыДокументыДанные"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsКодЛица1Null() {
                return this.IsNull(this.tableДокументыДанные.КодЛица1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetКодЛица1Null() {
                this[this.tableДокументыДанные.КодЛица1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsКодЛица2Null() {
                return this.IsNull(this.tableДокументыДанные.КодЛица2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetКодЛица2Null() {
                this[this.tableДокументыДанные.КодЛица2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsКодЛица3Null() {
                return this.IsNull(this.tableДокументыДанные.КодЛица3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetКодЛица3Null() {
                this[this.tableДокументыДанные.КодЛица3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsКодЛица4Null() {
                return this.IsNull(this.tableДокументыДанные.КодЛица4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetКодЛица4Null() {
                this[this.tableДокументыДанные.КодЛица4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsКодСклада1Null() {
                return this.IsNull(this.tableДокументыДанные.КодСклада1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetКодСклада1Null() {
                this[this.tableДокументыДанные.КодСклада1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsКодСклада2Null() {
                return this.IsNull(this.tableДокументыДанные.КодСклада2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetКодСклада2Null() {
                this[this.tableДокументыДанные.КодСклада2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsКодСклада3Null() {
                return this.IsNull(this.tableДокументыДанные.КодСклада3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetКодСклада3Null() {
                this[this.tableДокументыДанные.КодСклада3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsКодСклада4Null() {
                return this.IsNull(this.tableДокументыДанные.КодСклада4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetКодСклада4Null() {
                this[this.tableДокументыДанные.КодСклада4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsКодРесурса1Null() {
                return this.IsNull(this.tableДокументыДанные.КодРесурса1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetКодРесурса1Null() {
                this[this.tableДокументыДанные.КодРесурса1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsКодРесурса2Null() {
                return this.IsNull(this.tableДокументыДанные.КодРесурса2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetКодРесурса2Null() {
                this[this.tableДокументыДанные.КодРесурса2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsКодСотрудника1Null() {
                return this.IsNull(this.tableДокументыДанные.КодСотрудника1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetКодСотрудника1Null() {
                this[this.tableДокументыДанные.КодСотрудника1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsКодСотрудника2Null() {
                return this.IsNull(this.tableДокументыДанные.КодСотрудника2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetКодСотрудника2Null() {
                this[this.tableДокументыДанные.КодСотрудника2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsКодБизнесПроектаNull() {
                return this.IsNull(this.tableДокументыДанные.КодБизнесПроектаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetКодБизнесПроектаNull() {
                this[this.tableДокументыДанные.КодБизнесПроектаColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsДата2Null() {
                return this.IsNull(this.tableДокументыДанные.Дата2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetДата2Null() {
                this[this.tableДокументыДанные.Дата2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsДата3Null() {
                return this.IsNull(this.tableДокументыДанные.Дата3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetДата3Null() {
                this[this.tableДокументыДанные.Дата3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsДата4Null() {
                return this.IsNull(this.tableДокументыДанные.Дата4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetДата4Null() {
                this[this.tableДокументыДанные.Дата4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsДата5Null() {
                return this.IsNull(this.tableДокументыДанные.Дата5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetДата5Null() {
                this[this.tableДокументыДанные.Дата5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFlag1Null() {
                return this.IsNull(this.tableДокументыДанные.Flag1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFlag1Null() {
                this[this.tableДокументыДанные.Flag1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFlag2Null() {
                return this.IsNull(this.tableДокументыДанные.Flag2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFlag2Null() {
                this[this.tableДокументыДанные.Flag2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFlag3Null() {
                return this.IsNull(this.tableДокументыДанные.Flag3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFlag3Null() {
                this[this.tableДокументыДанные.Flag3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFlag4Null() {
                return this.IsNull(this.tableДокументыДанные.Flag4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFlag4Null() {
                this[this.tableДокументыДанные.Flag4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFlag5Null() {
                return this.IsNull(this.tableДокументыДанные.Flag5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFlag5Null() {
                this[this.tableДокументыДанные.Flag5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInt1Null() {
                return this.IsNull(this.tableДокументыДанные.Int1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInt1Null() {
                this[this.tableДокументыДанные.Int1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInt2Null() {
                return this.IsNull(this.tableДокументыДанные.Int2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInt2Null() {
                this[this.tableДокументыДанные.Int2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInt3Null() {
                return this.IsNull(this.tableДокументыДанные.Int3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInt3Null() {
                this[this.tableДокументыДанные.Int3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInt4Null() {
                return this.IsNull(this.tableДокументыДанные.Int4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInt4Null() {
                this[this.tableДокументыДанные.Int4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInt5Null() {
                return this.IsNull(this.tableДокументыДанные.Int5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInt5Null() {
                this[this.tableДокументыДанные.Int5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInt6Null() {
                return this.IsNull(this.tableДокументыДанные.Int6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInt6Null() {
                this[this.tableДокументыДанные.Int6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInt7Null() {
                return this.IsNull(this.tableДокументыДанные.Int7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInt7Null() {
                this[this.tableДокументыДанные.Int7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMoney1Null() {
                return this.IsNull(this.tableДокументыДанные.Money1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMoney1Null() {
                this[this.tableДокументыДанные.Money1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMoney2Null() {
                return this.IsNull(this.tableДокументыДанные.Money2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMoney2Null() {
                this[this.tableДокументыДанные.Money2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMoney3Null() {
                return this.IsNull(this.tableДокументыДанные.Money3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMoney3Null() {
                this[this.tableДокументыДанные.Money3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMoney4Null() {
                return this.IsNull(this.tableДокументыДанные.Money4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMoney4Null() {
                this[this.tableДокументыДанные.Money4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMoney5Null() {
                return this.IsNull(this.tableДокументыДанные.Money5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMoney5Null() {
                this[this.tableДокументыДанные.Money5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMoney6Null() {
                return this.IsNull(this.tableДокументыДанные.Money6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMoney6Null() {
                this[this.tableДокументыДанные.Money6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMoney7Null() {
                return this.IsNull(this.tableДокументыДанные.Money7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMoney7Null() {
                this[this.tableДокументыДанные.Money7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMoney8Null() {
                return this.IsNull(this.tableДокументыДанные.Money8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMoney8Null() {
                this[this.tableДокументыДанные.Money8Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class СвязиДокументовRow : global::System.Data.DataRow {
            
            private СвязиДокументовDataTable tableСвязиДокументов;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal СвязиДокументовRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableСвязиДокументов = ((СвязиДокументовDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодСвязиДокументов {
                get {
                    return ((int)(this[this.tableСвязиДокументов.КодСвязиДокументовColumn]));
                }
                set {
                    this[this.tableСвязиДокументов.КодСвязиДокументовColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодДокументаОснования {
                get {
                    return ((int)(this[this.tableСвязиДокументов.КодДокументаОснованияColumn]));
                }
                set {
                    this[this.tableСвязиДокументов.КодДокументаОснованияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодДокументаВытекающего {
                get {
                    return ((int)(this[this.tableСвязиДокументов.КодДокументаВытекающегоColumn]));
                }
                set {
                    this[this.tableСвязиДокументов.КодДокументаВытекающегоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодПоляДокумента {
                get {
                    try {
                        return ((int)(this[this.tableСвязиДокументов.КодПоляДокументаColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КодПоляДокумента\' в таблице \'СвязиДокументов\' равно DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableСвязиДокументов.КодПоляДокументаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ПорядокОснования {
                get {
                    return ((int)(this[this.tableСвязиДокументов.ПорядокОснованияColumn]));
                }
                set {
                    this[this.tableСвязиДокументов.ПорядокОснованияColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ПорядокВытекающего {
                get {
                    return ((int)(this[this.tableСвязиДокументов.ПорядокВытекающегоColumn]));
                }
                set {
                    this[this.tableСвязиДокументов.ПорядокВытекающегоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Изменил {
                get {
                    return ((int)(this[this.tableСвязиДокументов.ИзменилColumn]));
                }
                set {
                    this[this.tableСвязиДокументов.ИзменилColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Изменено {
                get {
                    return ((global::System.DateTime)(this[this.tableСвязиДокументов.ИзмененоColumn]));
                }
                set {
                    this[this.tableСвязиДокументов.ИзмененоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ДокументыRow ДокументыRow {
                get {
                    return ((ДокументыRow)(this.GetParentRow(this.Table.ParentRelations["ДокументыСвязиДокументов"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ДокументыСвязиДокументов"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsКодПоляДокументаNull() {
                return this.IsNull(this.tableСвязиДокументов.КодПоляДокументаColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetКодПоляДокументаNull() {
                this[this.tableСвязиДокументов.КодПоляДокументаColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ЛицаДокументовRow : global::System.Data.DataRow {
            
            private ЛицаДокументовDataTable tableЛицаДокументов;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ЛицаДокументовRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableЛицаДокументов = ((ЛицаДокументовDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодЛицаДокумента {
                get {
                    return ((int)(this[this.tableЛицаДокументов.КодЛицаДокументаColumn]));
                }
                set {
                    this[this.tableЛицаДокументов.КодЛицаДокументаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодДокумента {
                get {
                    return ((int)(this[this.tableЛицаДокументов.КодДокументаColumn]));
                }
                set {
                    this[this.tableЛицаДокументов.КодДокументаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодЛица {
                get {
                    return ((int)(this[this.tableЛицаДокументов.КодЛицаColumn]));
                }
                set {
                    this[this.tableЛицаДокументов.КодЛицаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Положение {
                get {
                    return ((byte)(this[this.tableЛицаДокументов.ПоложениеColumn]));
                }
                set {
                    this[this.tableЛицаДокументов.ПоложениеColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Изменил {
                get {
                    return ((int)(this[this.tableЛицаДокументов.ИзменилColumn]));
                }
                set {
                    this[this.tableЛицаДокументов.ИзменилColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Изменено {
                get {
                    return ((global::System.DateTime)(this[this.tableЛицаДокументов.ИзмененоColumn]));
                }
                set {
                    this[this.tableЛицаДокументов.ИзмененоColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ДокументыRow ДокументыRow {
                get {
                    return ((ДокументыRow)(this.GetParentRow(this.Table.ParentRelations["ДокументыЛицаДокументов"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ДокументыЛицаДокументов"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ПодписиДокументовRow : global::System.Data.DataRow {
            
            private ПодписиДокументовDataTable tableПодписиДокументов;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ПодписиДокументовRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableПодписиДокументов = ((ПодписиДокументовDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодПодписиДокумента {
                get {
                    return ((int)(this[this.tableПодписиДокументов.КодПодписиДокументаColumn]));
                }
                set {
                    this[this.tableПодписиДокументов.КодПодписиДокументаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодДокумента {
                get {
                    return ((int)(this[this.tableПодписиДокументов.КодДокументаColumn]));
                }
                set {
                    this[this.tableПодписиДокументов.КодДокументаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодСотрудника {
                get {
                    return ((int)(this[this.tableПодписиДокументов.КодСотрудникаColumn]));
                }
                set {
                    this[this.tableПодписиДокументов.КодСотрудникаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int КодСотрудникаЗА {
                get {
                    try {
                        return ((int)(this[this.tableПодписиДокументов.КодСотрудникаЗАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КодСотрудникаЗА\' в таблице \'ПодписиДокументов\' равно DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableПодписиДокументов.КодСотрудникаЗАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Дата {
                get {
                    return ((global::System.DateTime)(this[this.tableПодписиДокументов.ДатаColumn]));
                }
                set {
                    this[this.tableПодписиДокументов.ДатаColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ТипПодписи {
                get {
                    return ((byte)(this[this.tableПодписиДокументов.ТипПодписиColumn]));
                }
                set {
                    this[this.tableПодписиДокументов.ТипПодписиColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Комментарий {
                get {
                    return ((string)(this[this.tableПодписиДокументов.КомментарийColumn]));
                }
                set {
                    this[this.tableПодписиДокументов.КомментарийColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ДокументыRow ДокументыRow {
                get {
                    return ((ДокументыRow)(this.GetParentRow(this.Table.ParentRelations["ДокументыПодписиДокументов"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ДокументыПодписиДокументов"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsКодСотрудникаЗАNull() {
                return this.IsNull(this.tableПодписиДокументов.КодСотрудникаЗАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetКодСотрудникаЗАNull() {
                this[this.tableПодписиДокументов.КодСотрудникаЗАColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ТипыДокументовRowChangeEvent : global::System.EventArgs {
            
            private ТипыДокументовRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ТипыДокументовRowChangeEvent(ТипыДокументовRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ТипыДокументовRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ПоляДокументовRowChangeEvent : global::System.EventArgs {
            
            private ПоляДокументовRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ПоляДокументовRowChangeEvent(ПоляДокументовRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ПоляДокументовRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ТипыПолейRowChangeEvent : global::System.EventArgs {
            
            private ТипыПолейRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ТипыПолейRowChangeEvent(ТипыПолейRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ТипыПолейRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ДокументыRowChangeEvent : global::System.EventArgs {
            
            private ДокументыRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ДокументыRowChangeEvent(ДокументыRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ДокументыRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ДокументыДанныеRowChangeEvent : global::System.EventArgs {
            
            private ДокументыДанныеRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ДокументыДанныеRowChangeEvent(ДокументыДанныеRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ДокументыДанныеRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class СвязиДокументовRowChangeEvent : global::System.EventArgs {
            
            private СвязиДокументовRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public СвязиДокументовRowChangeEvent(СвязиДокументовRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public СвязиДокументовRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ЛицаДокументовRowChangeEvent : global::System.EventArgs {
            
            private ЛицаДокументовRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ЛицаДокументовRowChangeEvent(ЛицаДокументовRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ЛицаДокументовRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ПодписиДокументовRowChangeEvent : global::System.EventArgs {
            
            private ПодписиДокументовRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ПодписиДокументовRowChangeEvent(ПодписиДокументовRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ПодписиДокументовRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591